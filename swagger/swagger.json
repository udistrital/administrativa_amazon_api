{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/administrativa_amazon_api/v1",
    "paths": {
        "/acta_inicio/": {
            "get": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "get ActaInicio",
                "operationId": "ActaInicioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "create ActaInicio",
                "operationId": "ActaInicioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaInicio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActaInicio"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/acta_inicio/{id}": {
            "get": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "get ActaInicio by id",
                "operationId": "ActaInicioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "update the ActaInicio",
                "operationId": "ActaInicioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaInicio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "delete the ActaInicio",
                "operationId": "ActaInicioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/actividad_economica_necesidad/": {
            "get": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "get ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "create ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadEconomicaNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActividadEconomicaNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/actividad_economica_necesidad/{id}": {
            "get": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "get ActividadEconomicaNecesidad by id",
                "operationId": "ActividadEconomicaNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "update the ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadEconomicaNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "delete the ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/actividad_solicitud_necesidad/": {
            "get": {
                "tags": [
                    "actividad_solicitud_necesidad"
                ],
                "description": "get ActividadSolicitudNecesidad",
                "operationId": "ActividadSolicitudNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadSolicitudNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "actividad_solicitud_necesidad"
                ],
                "description": "create ActividadSolicitudNecesidad",
                "operationId": "ActividadSolicitudNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActividadSolicitudNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/actividad_solicitud_necesidad/{id}": {
            "get": {
                "tags": [
                    "actividad_solicitud_necesidad"
                ],
                "description": "get ActividadSolicitudNecesidad by id",
                "operationId": "ActividadSolicitudNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "actividad_solicitud_necesidad"
                ],
                "description": "update the ActividadSolicitudNecesidad",
                "operationId": "ActividadSolicitudNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "actividad_solicitud_necesidad"
                ],
                "description": "delete the ActividadSolicitudNecesidad",
                "operationId": "ActividadSolicitudNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/actividades_centro_costos/": {
            "get": {
                "tags": [
                    "actividades_centro_costos"
                ],
                "description": "get ActividadesCentroCostos",
                "operationId": "ActividadesCentroCostosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadesCentroCostos"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "actividades_centro_costos"
                ],
                "description": "create ActividadesCentroCostos",
                "operationId": "ActividadesCentroCostosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadesCentroCostos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadesCentroCostos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActividadesCentroCostos"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/actividades_centro_costos/{id}": {
            "get": {
                "tags": [
                    "actividades_centro_costos"
                ],
                "description": "get ActividadesCentroCostos by id",
                "operationId": "ActividadesCentroCostosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadesCentroCostos"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "actividades_centro_costos"
                ],
                "description": "update the ActividadesCentroCostos",
                "operationId": "ActividadesCentroCostosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadesCentroCostos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadesCentroCostos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadesCentroCostos"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "actividades_centro_costos"
                ],
                "description": "delete the ActividadesCentroCostos",
                "operationId": "ActividadesCentroCostosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/adicion/": {
            "get": {
                "tags": [
                    "adicion"
                ],
                "description": "get Adicion",
                "operationId": "AdicionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Adicion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "adicion"
                ],
                "description": "create Adicion",
                "operationId": "AdicionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Adicion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Adicion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Adicion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/adicion/{id}": {
            "get": {
                "tags": [
                    "adicion"
                ],
                "description": "get Adicion by id",
                "operationId": "AdicionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Adicion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "adicion"
                ],
                "description": "update the Adicion",
                "operationId": "AdicionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Adicion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Adicion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Adicion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "adicion"
                ],
                "description": "delete the Adicion",
                "operationId": "AdicionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/amparo_contrato/": {
            "get": {
                "tags": [
                    "amparo_contrato"
                ],
                "description": "get AmparoContrato",
                "operationId": "AmparoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.AmparoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "amparo_contrato"
                ],
                "description": "create AmparoContrato",
                "operationId": "AmparoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AmparoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AmparoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AmparoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/amparo_contrato/{id}": {
            "get": {
                "tags": [
                    "amparo_contrato"
                ],
                "description": "get AmparoContrato by id",
                "operationId": "AmparoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.AmparoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "amparo_contrato"
                ],
                "description": "update the AmparoContrato",
                "operationId": "AmparoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AmparoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AmparoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.AmparoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "amparo_contrato"
                ],
                "description": "delete the AmparoContrato",
                "operationId": "AmparoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/amparo_poliza/": {
            "get": {
                "tags": [
                    "amparo_poliza"
                ],
                "description": "get AmparoPoliza",
                "operationId": "AmparoPolizaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.AmparoPoliza"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "amparo_poliza"
                ],
                "description": "create AmparoPoliza",
                "operationId": "AmparoPolizaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AmparoPoliza content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AmparoPoliza"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AmparoPoliza"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/amparo_poliza/{id}": {
            "get": {
                "tags": [
                    "amparo_poliza"
                ],
                "description": "get AmparoPoliza by id",
                "operationId": "AmparoPolizaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.AmparoPoliza"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "amparo_poliza"
                ],
                "description": "update the AmparoPoliza",
                "operationId": "AmparoPolizaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AmparoPoliza content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AmparoPoliza"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.AmparoPoliza"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "amparo_poliza"
                ],
                "description": "delete the AmparoPoliza",
                "operationId": "AmparoPolizaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/anulacion/": {
            "get": {
                "tags": [
                    "anulacion"
                ],
                "description": "get Anulacion",
                "operationId": "AnulacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Anulacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "anulacion"
                ],
                "description": "create Anulacion",
                "operationId": "AnulacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Anulacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Anulacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Anulacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/anulacion/{id}": {
            "get": {
                "tags": [
                    "anulacion"
                ],
                "description": "get Anulacion by id",
                "operationId": "AnulacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Anulacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "anulacion"
                ],
                "description": "update the Anulacion",
                "operationId": "AnulacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Anulacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Anulacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Anulacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "anulacion"
                ],
                "description": "delete the Anulacion",
                "operationId": "AnulacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/cambio_supervisor/": {
            "get": {
                "tags": [
                    "cambio_supervisor"
                ],
                "description": "get CambioSupervisor",
                "operationId": "CambioSupervisorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CambioSupervisor"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "cambio_supervisor"
                ],
                "description": "create CambioSupervisor",
                "operationId": "CambioSupervisorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CambioSupervisor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CambioSupervisor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CambioSupervisor"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cambio_supervisor/{id}": {
            "get": {
                "tags": [
                    "cambio_supervisor"
                ],
                "description": "get CambioSupervisor by id",
                "operationId": "CambioSupervisorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CambioSupervisor"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "cambio_supervisor"
                ],
                "description": "update the CambioSupervisor",
                "operationId": "CambioSupervisorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CambioSupervisor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CambioSupervisor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CambioSupervisor"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cambio_supervisor"
                ],
                "description": "delete the CambioSupervisor",
                "operationId": "CambioSupervisorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/cargo_supervisor_temporal/": {
            "get": {
                "tags": [
                    "cargo_supervisor_temporal"
                ],
                "description": "get CargoSupervisorTemporal",
                "operationId": "CargoSupervisorTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CargoSupervisorTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "cargo_supervisor_temporal"
                ],
                "description": "create CargoSupervisorTemporal",
                "operationId": "CargoSupervisorTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CargoSupervisorTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CargoSupervisorTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CargoSupervisorTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cargo_supervisor_temporal/{id}": {
            "get": {
                "tags": [
                    "cargo_supervisor_temporal"
                ],
                "description": "get CargoSupervisorTemporal by id",
                "operationId": "CargoSupervisorTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CargoSupervisorTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "cargo_supervisor_temporal"
                ],
                "description": "update the CargoSupervisorTemporal",
                "operationId": "CargoSupervisorTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CargoSupervisorTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CargoSupervisorTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CargoSupervisorTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cargo_supervisor_temporal"
                ],
                "description": "delete the CargoSupervisorTemporal",
                "operationId": "CargoSupervisorTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/catalogo_temporal/": {
            "get": {
                "tags": [
                    "catalogo_temporal"
                ],
                "description": "get CatalogoTemporal",
                "operationId": "CatalogoTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "catalogo_temporal"
                ],
                "description": "create CatalogoTemporal",
                "operationId": "CatalogoTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CatalogoTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CatalogoTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/catalogo_temporal/{id}": {
            "get": {
                "tags": [
                    "catalogo_temporal"
                ],
                "description": "get CatalogoTemporal by id",
                "operationId": "CatalogoTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogo_temporal"
                ],
                "description": "update the CatalogoTemporal",
                "operationId": "CatalogoTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CatalogoTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogo_temporal"
                ],
                "description": "delete the CatalogoTemporal",
                "operationId": "CatalogoTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/centro_costos/": {
            "get": {
                "tags": [
                    "centro_costos"
                ],
                "description": "get CentroCostos",
                "operationId": "CentroCostosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostos"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "centro_costos"
                ],
                "description": "create CentroCostos",
                "operationId": "CentroCostosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CentroCostos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CentroCostos"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/centro_costos/{id}": {
            "get": {
                "tags": [
                    "centro_costos"
                ],
                "description": "get CentroCostos by id",
                "operationId": "CentroCostosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostos"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "centro_costos"
                ],
                "description": "update the CentroCostos",
                "operationId": "CentroCostosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CentroCostos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostos"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "centro_costos"
                ],
                "description": "delete the CentroCostos",
                "operationId": "CentroCostosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/centro_costos_centro_costos/": {
            "get": {
                "tags": [
                    "centro_costos_centro_costos"
                ],
                "description": "get CentroCostosCentroCostos",
                "operationId": "CentroCostosCentroCostosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostosCentroCostos"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "centro_costos_centro_costos"
                ],
                "description": "create CentroCostosCentroCostos",
                "operationId": "CentroCostosCentroCostosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CentroCostosCentroCostos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostosCentroCostos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CentroCostosCentroCostos"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/centro_costos_centro_costos/{id}": {
            "get": {
                "tags": [
                    "centro_costos_centro_costos"
                ],
                "description": "get CentroCostosCentroCostos by id",
                "operationId": "CentroCostosCentroCostosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostosCentroCostos"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "centro_costos_centro_costos"
                ],
                "description": "update the CentroCostosCentroCostos",
                "operationId": "CentroCostosCentroCostosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CentroCostosCentroCostos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostosCentroCostos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CentroCostosCentroCostos"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "centro_costos_centro_costos"
                ],
                "description": "delete the CentroCostosCentroCostos",
                "operationId": "CentroCostosCentroCostosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/cesion/": {
            "get": {
                "tags": [
                    "cesion"
                ],
                "description": "get Cesion",
                "operationId": "CesionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Cesion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "cesion"
                ],
                "description": "create Cesion",
                "operationId": "CesionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cesion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cesion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Cesion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cesion/{id}": {
            "get": {
                "tags": [
                    "cesion"
                ],
                "description": "get Cesion by id",
                "operationId": "CesionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Cesion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "cesion"
                ],
                "description": "update the Cesion",
                "operationId": "CesionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cesion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cesion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Cesion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cesion"
                ],
                "description": "delete the Cesion",
                "operationId": "CesionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/codigo_validacion/": {
            "get": {
                "tags": [
                    "codigo_validacion"
                ],
                "description": "get CodigoValidacion",
                "operationId": "CodigoValidacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CodigoValidacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "codigo_validacion"
                ],
                "description": "create CodigoValidacion",
                "operationId": "CodigoValidacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CodigoValidacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CodigoValidacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CodigoValidacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/codigo_validacion/{id}": {
            "get": {
                "tags": [
                    "codigo_validacion"
                ],
                "description": "get CodigoValidacion by id",
                "operationId": "CodigoValidacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CodigoValidacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "codigo_validacion"
                ],
                "description": "update the CodigoValidacion",
                "operationId": "CodigoValidacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CodigoValidacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CodigoValidacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CodigoValidacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "codigo_validacion"
                ],
                "description": "delete the CodigoValidacion",
                "operationId": "CodigoValidacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/componente_resolucion/": {
            "get": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "get ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "create ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ComponenteResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ComponenteResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/componente_resolucion/{id}": {
            "get": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "get ComponenteResolucion by id",
                "operationId": "ComponenteResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "update the ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ComponenteResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "delete the ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contenido_resolucion/ResolucionTemplate": {
            "get": {
                "tags": [
                    "contenido_resolucion"
                ],
                "description": "get ResolucionCompleta by id",
                "operationId": "ResolucionCompletaController.Get Template",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionCompleta"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/contenido_resolucion/{idResolucion}": {
            "get": {
                "tags": [
                    "contenido_resolucion"
                ],
                "description": "get ResolucionCompleta by id",
                "operationId": "ResolucionCompletaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionCompleta"
                        }
                    },
                    "403": {
                        "description": ":idResolucion is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contenido_resolucion"
                ],
                "description": "update the ResolucionCompleta",
                "operationId": "ResolucionCompletaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionCompleta"
                        }
                    },
                    "403": {
                        "description": ":idResolucion is not int"
                    }
                }
            }
        },
        "/contrato/": {
            "get": {
                "tags": [
                    "contrato"
                ],
                "description": "get Contrato",
                "operationId": "ContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Contrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato"
                ],
                "description": "create Contrato",
                "operationId": "ContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Contrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Contrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato/{id}": {
            "get": {
                "tags": [
                    "contrato"
                ],
                "description": "get Contrato by id",
                "operationId": "ContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Contrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato"
                ],
                "description": "update the Contrato",
                "operationId": "ContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Contrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Contrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato"
                ],
                "description": "delete the Contrato",
                "operationId": "ContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_arrendamiento/": {
            "get": {
                "tags": [
                    "contrato_arrendamiento"
                ],
                "description": "get ContratoArrendamiento",
                "operationId": "ContratoArrendamientoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoArrendamiento"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_arrendamiento"
                ],
                "description": "create ContratoArrendamiento",
                "operationId": "ContratoArrendamientoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoArrendamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoArrendamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoArrendamiento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_arrendamiento/{id}": {
            "get": {
                "tags": [
                    "contrato_arrendamiento"
                ],
                "description": "get ContratoArrendamiento by id",
                "operationId": "ContratoArrendamientoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoArrendamiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_arrendamiento"
                ],
                "description": "update the ContratoArrendamiento",
                "operationId": "ContratoArrendamientoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoArrendamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoArrendamiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoArrendamiento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_arrendamiento"
                ],
                "description": "delete the ContratoArrendamiento",
                "operationId": "ContratoArrendamientoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_cancelado/": {
            "get": {
                "tags": [
                    "contrato_cancelado"
                ],
                "description": "get ContratoCancelado",
                "operationId": "ContratoCanceladoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCancelado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_cancelado"
                ],
                "description": "create ContratoCancelado",
                "operationId": "ContratoCanceladoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoCancelado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCancelado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoCancelado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_cancelado/{id}": {
            "get": {
                "tags": [
                    "contrato_cancelado"
                ],
                "description": "get ContratoCancelado by id",
                "operationId": "ContratoCanceladoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCancelado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_cancelado"
                ],
                "description": "update the ContratoCancelado",
                "operationId": "ContratoCanceladoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoCancelado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCancelado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCancelado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_cancelado"
                ],
                "description": "delete the ContratoCancelado",
                "operationId": "ContratoCanceladoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_cps/": {
            "get": {
                "tags": [
                    "contrato_cps"
                ],
                "description": "get ContratoCps",
                "operationId": "ContratoCpsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCps"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_cps"
                ],
                "description": "create ContratoCps",
                "operationId": "ContratoCpsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoCps content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCps"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoCps"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_cps/{id}": {
            "get": {
                "tags": [
                    "contrato_cps"
                ],
                "description": "get ContratoCps by id",
                "operationId": "ContratoCpsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCps"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_cps"
                ],
                "description": "update the ContratoCps",
                "operationId": "ContratoCpsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoCps content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCps"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoCps"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_cps"
                ],
                "description": "delete the ContratoCps",
                "operationId": "ContratoCpsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_disponibilidad/": {
            "get": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "get ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "create ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoDisponibilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "get ContratoDisponibilidad by id",
                "operationId": "ContratoDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "update the ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "delete the ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_estado/": {
            "get": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "get ContratoEstado",
                "operationId": "ContratoEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "create ContratoEstado",
                "operationId": "ContratoEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_estado/{id}": {
            "get": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "get ContratoEstado by id",
                "operationId": "ContratoEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "update the ContratoEstado",
                "operationId": "ContratoEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "delete the ContratoEstado",
                "operationId": "ContratoEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_evaluacion/": {
            "get": {
                "tags": [
                    "contrato_evaluacion"
                ],
                "description": "get ContratoEvaluacion",
                "operationId": "ContratoEvaluacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEvaluacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_evaluacion"
                ],
                "description": "create ContratoEvaluacion",
                "operationId": "ContratoEvaluacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEvaluacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEvaluacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoEvaluacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_evaluacion/{id}": {
            "get": {
                "tags": [
                    "contrato_evaluacion"
                ],
                "description": "get ContratoEvaluacion by id",
                "operationId": "ContratoEvaluacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEvaluacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_evaluacion"
                ],
                "description": "update the ContratoEvaluacion",
                "operationId": "ContratoEvaluacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEvaluacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEvaluacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEvaluacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_evaluacion"
                ],
                "description": "delete the ContratoEvaluacion",
                "operationId": "ContratoEvaluacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_general/": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get ContratoGeneral",
                "operationId": "ContratoGeneralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_general"
                ],
                "description": "create ContratoGeneral",
                "operationId": "ContratoGeneralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoGeneral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_general/InsertarContratos": {
            "post": {
                "tags": [
                    "contrato_general"
                ],
                "description": "create ContratoGenerales",
                "operationId": "ContratoGeneralController.Post InsertarContratos",
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoGeneral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_general/maximo_dve": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get max number of the contracts DVE Id",
                "operationId": "ContratoGeneralController.Maximo Consecutivo DVE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_general/{id}": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get ContratoGeneral by id",
                "operationId": "ContratoGeneralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_general"
                ],
                "description": "update the ContratoGeneral",
                "operationId": "ContratoGeneralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_general"
                ],
                "description": "delete the ContratoGeneral",
                "operationId": "ContratoGeneralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_liquidado/": {
            "get": {
                "tags": [
                    "contrato_liquidado"
                ],
                "description": "get ContratoLiquidado",
                "operationId": "ContratoLiquidadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoLiquidado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_liquidado"
                ],
                "description": "create ContratoLiquidado",
                "operationId": "ContratoLiquidadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoLiquidado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoLiquidado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoLiquidado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_liquidado/{id}": {
            "get": {
                "tags": [
                    "contrato_liquidado"
                ],
                "description": "get ContratoLiquidado by id",
                "operationId": "ContratoLiquidadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoLiquidado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_liquidado"
                ],
                "description": "update the ContratoLiquidado",
                "operationId": "ContratoLiquidadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoLiquidado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoLiquidado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoLiquidado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_liquidado"
                ],
                "description": "delete the ContratoLiquidado",
                "operationId": "ContratoLiquidadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_proveedor/": {
            "get": {
                "tags": [
                    "contrato_proveedor"
                ],
                "description": "get ContratoProveedor",
                "operationId": "ContratoProveedorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoProveedor"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_proveedor"
                ],
                "description": "create ContratoProveedor",
                "operationId": "ContratoProveedorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoProveedor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoProveedor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoProveedor"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_proveedor/{id}": {
            "get": {
                "tags": [
                    "contrato_proveedor"
                ],
                "description": "get ContratoProveedor by id",
                "operationId": "ContratoProveedorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoProveedor"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_proveedor"
                ],
                "description": "update the ContratoProveedor",
                "operationId": "ContratoProveedorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoProveedor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoProveedor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoProveedor"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_proveedor"
                ],
                "description": "delete the ContratoProveedor",
                "operationId": "ContratoProveedorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_suscrito/": {
            "get": {
                "tags": [
                    "contrato_suscrito"
                ],
                "description": "get ContratoSuscrito",
                "operationId": "ContratoSuscritoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoSuscrito"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_suscrito"
                ],
                "description": "create ContratoSuscrito",
                "operationId": "ContratoSuscritoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoSuscrito content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoSuscrito"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoSuscrito"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_suscrito/{id}": {
            "get": {
                "tags": [
                    "contrato_suscrito"
                ],
                "description": "get ContratoSuscrito by id",
                "operationId": "ContratoSuscritoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoSuscrito"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_suscrito"
                ],
                "description": "update the ContratoSuscrito",
                "operationId": "ContratoSuscritoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoSuscrito content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoSuscrito"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoSuscrito"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_suscrito"
                ],
                "description": "delete the ContratoSuscrito",
                "operationId": "ContratoSuscritoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/convenio/": {
            "get": {
                "tags": [
                    "convenio"
                ],
                "description": "get Convenio",
                "operationId": "ConvenioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Convenio"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "convenio"
                ],
                "description": "create Convenio",
                "operationId": "ConvenioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Convenio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Convenio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Convenio"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/convenio/{id}": {
            "get": {
                "tags": [
                    "convenio"
                ],
                "description": "get Convenio by id",
                "operationId": "ConvenioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Convenio"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "convenio"
                ],
                "description": "update the Convenio",
                "operationId": "ConvenioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Convenio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Convenio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Convenio"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "convenio"
                ],
                "description": "delete the Convenio",
                "operationId": "ConvenioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dedicacion/": {
            "get": {
                "tags": [
                    "dedicacion"
                ],
                "description": "get Dedicacion",
                "operationId": "DedicacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dedicacion"
                ],
                "description": "create Dedicacion",
                "operationId": "DedicacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Dedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Dedicacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dedicacion/{id}": {
            "get": {
                "tags": [
                    "dedicacion"
                ],
                "description": "get Dedicacion by id",
                "operationId": "DedicacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dedicacion"
                ],
                "description": "update the Dedicacion",
                "operationId": "DedicacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Dedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dedicacion"
                ],
                "description": "delete the Dedicacion",
                "operationId": "DedicacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dependencia_SIC/": {
            "get": {
                "tags": [
                    "dependencia_SIC"
                ],
                "description": "get DependenciaSIC",
                "operationId": "DependenciaSICController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaSIC"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dependencia_SIC"
                ],
                "description": "create DependenciaSIC",
                "operationId": "DependenciaSICController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaSIC content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaSIC"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DependenciaSIC"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dependencia_SIC/{id}": {
            "get": {
                "tags": [
                    "dependencia_SIC"
                ],
                "description": "get DependenciaSIC by id",
                "operationId": "DependenciaSICController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaSIC"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dependencia_SIC"
                ],
                "description": "update the DependenciaSIC",
                "operationId": "DependenciaSICController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaSIC content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaSIC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaSIC"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dependencia_SIC"
                ],
                "description": "delete the DependenciaSIC",
                "operationId": "DependenciaSICController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dependencia_dependencia_temporal/": {
            "get": {
                "tags": [
                    "dependencia_dependencia_temporal"
                ],
                "description": "get DependenciaDependenciaTemporal",
                "operationId": "DependenciaDependenciaTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaDependenciaTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dependencia_dependencia_temporal"
                ],
                "description": "create DependenciaDependenciaTemporal",
                "operationId": "DependenciaDependenciaTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaDependenciaTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaDependenciaTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DependenciaDependenciaTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dependencia_dependencia_temporal/{id}": {
            "get": {
                "tags": [
                    "dependencia_dependencia_temporal"
                ],
                "description": "get DependenciaDependenciaTemporal by id",
                "operationId": "DependenciaDependenciaTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaDependenciaTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dependencia_dependencia_temporal"
                ],
                "description": "update the DependenciaDependenciaTemporal",
                "operationId": "DependenciaDependenciaTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaDependenciaTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaDependenciaTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaDependenciaTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dependencia_dependencia_temporal"
                ],
                "description": "delete the DependenciaDependenciaTemporal",
                "operationId": "DependenciaDependenciaTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dependencia_temporal/": {
            "get": {
                "tags": [
                    "dependencia_temporal"
                ],
                "description": "get DependenciaTemporal",
                "operationId": "DependenciaTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dependencia_temporal"
                ],
                "description": "create DependenciaTemporal",
                "operationId": "DependenciaTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DependenciaTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dependencia_temporal/{id}": {
            "get": {
                "tags": [
                    "dependencia_temporal"
                ],
                "description": "get DependenciaTemporal by id",
                "operationId": "DependenciaTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dependencia_temporal"
                ],
                "description": "update the DependenciaTemporal",
                "operationId": "DependenciaTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dependencia_temporal"
                ],
                "description": "delete the DependenciaTemporal",
                "operationId": "DependenciaTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/disponibilidad_apropiacion_solicitud_rp/": {
            "get": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "get DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "create DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadApropiacionSolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DisponibilidadApropiacionSolicitudRp"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/disponibilidad_apropiacion_solicitud_rp/{id}": {
            "get": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "get DisponibilidadApropiacionSolicitudRp by id",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "update the DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadApropiacionSolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "delete the DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/elemento_acta_recibido/": {
            "get": {
                "tags": [
                    "elemento_acta_recibido"
                ],
                "description": "get ElementoActaRecibido",
                "operationId": "ElementoActaRecibidoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ElementoActaRecibido"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "elemento_acta_recibido"
                ],
                "description": "create ElementoActaRecibido",
                "operationId": "ElementoActaRecibidoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ElementoActaRecibido content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ElementoActaRecibido"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ElementoActaRecibido"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/elemento_acta_recibido/{id}": {
            "get": {
                "tags": [
                    "elemento_acta_recibido"
                ],
                "description": "get ElementoActaRecibido by id",
                "operationId": "ElementoActaRecibidoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ElementoActaRecibido"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "elemento_acta_recibido"
                ],
                "description": "update the ElementoActaRecibido",
                "operationId": "ElementoActaRecibidoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ElementoActaRecibido content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ElementoActaRecibido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ElementoActaRecibido"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "elemento_acta_recibido"
                ],
                "description": "delete the ElementoActaRecibido",
                "operationId": "ElementoActaRecibidoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/escalafon/": {
            "get": {
                "tags": [
                    "escalafon"
                ],
                "description": "get Escalafon",
                "operationId": "EscalafonController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Escalafon"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "escalafon"
                ],
                "description": "create Escalafon",
                "operationId": "EscalafonController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Escalafon content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Escalafon"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Escalafon"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/escalafon/{id}": {
            "get": {
                "tags": [
                    "escalafon"
                ],
                "description": "get Escalafon by id",
                "operationId": "EscalafonController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Escalafon"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "escalafon"
                ],
                "description": "update the Escalafon",
                "operationId": "EscalafonController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Escalafon content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Escalafon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Escalafon"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "escalafon"
                ],
                "description": "delete the Escalafon",
                "operationId": "EscalafonController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/escalafon_persona/": {
            "get": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "get EscalafonPersona",
                "operationId": "EscalafonPersonaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EscalafonPersona"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "create EscalafonPersona",
                "operationId": "EscalafonPersonaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EscalafonPersona content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EscalafonPersona"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EscalafonPersona"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/escalafon_persona/{id}": {
            "get": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "get EscalafonPersona by id",
                "operationId": "EscalafonPersonaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EscalafonPersona"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "update the EscalafonPersona",
                "operationId": "EscalafonPersonaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EscalafonPersona content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EscalafonPersona"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EscalafonPersona"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "escalafon_persona"
                ],
                "description": "delete the EscalafonPersona",
                "operationId": "EscalafonPersonaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/espaciosfisicos_SIC/": {
            "get": {
                "tags": [
                    "espaciosfisicos_SIC"
                ],
                "description": "get EspaciosfisicosSIC",
                "operationId": "EspaciosfisicosSICController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspaciosfisicosSIC"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "espaciosfisicos_SIC"
                ],
                "description": "create EspaciosfisicosSIC",
                "operationId": "EspaciosfisicosSICController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EspaciosfisicosSIC content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EspaciosfisicosSIC"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EspaciosfisicosSIC"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/espaciosfisicos_SIC/{id}": {
            "get": {
                "tags": [
                    "espaciosfisicos_SIC"
                ],
                "description": "get EspaciosfisicosSIC by id",
                "operationId": "EspaciosfisicosSICController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspaciosfisicosSIC"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "espaciosfisicos_SIC"
                ],
                "description": "update the EspaciosfisicosSIC",
                "operationId": "EspaciosfisicosSICController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EspaciosfisicosSIC content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EspaciosfisicosSIC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspaciosfisicosSIC"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "espaciosfisicos_SIC"
                ],
                "description": "delete the EspaciosfisicosSIC",
                "operationId": "EspaciosfisicosSICController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/especificacion_tecnica/": {
            "get": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "get EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "create EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EspecificacionTecnica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EspecificacionTecnica"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/especificacion_tecnica/{id}": {
            "get": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "get EspecificacionTecnica by id",
                "operationId": "EspecificacionTecnicaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "update the EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EspecificacionTecnica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "delete the EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_contrato/": {
            "get": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "get EstadoContrato",
                "operationId": "EstadoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "create EstadoContrato",
                "operationId": "EstadoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_contrato/{id}": {
            "get": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "get EstadoContrato by id",
                "operationId": "EstadoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "update the EstadoContrato",
                "operationId": "EstadoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "delete the EstadoContrato",
                "operationId": "EstadoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_resolucion/": {
            "get": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "get EstadoResolucion",
                "operationId": "EstadoResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "create EstadoResolucion",
                "operationId": "EstadoResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_resolucion/{id}": {
            "get": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "get EstadoResolucion by id",
                "operationId": "EstadoResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "update the EstadoResolucion",
                "operationId": "EstadoResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "delete the EstadoResolucion",
                "operationId": "EstadoResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_solicitud_necesidad/": {
            "get": {
                "tags": [
                    "estado_solicitud_necesidad"
                ],
                "description": "get EstadoSolicitudNecesidad",
                "operationId": "EstadoSolicitudNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSolicitudNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "estado_solicitud_necesidad"
                ],
                "description": "create EstadoSolicitudNecesidad",
                "operationId": "EstadoSolicitudNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoSolicitudNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_solicitud_necesidad/{id}": {
            "get": {
                "tags": [
                    "estado_solicitud_necesidad"
                ],
                "description": "get EstadoSolicitudNecesidad by id",
                "operationId": "EstadoSolicitudNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_solicitud_necesidad"
                ],
                "description": "update the EstadoSolicitudNecesidad",
                "operationId": "EstadoSolicitudNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_solicitud_necesidad"
                ],
                "description": "delete the EstadoSolicitudNecesidad",
                "operationId": "EstadoSolicitudNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/evaluacion/": {
            "get": {
                "tags": [
                    "evaluacion"
                ],
                "description": "get Evaluacion",
                "operationId": "EvaluacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Evaluacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "evaluacion"
                ],
                "description": "create Evaluacion",
                "operationId": "EvaluacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Evaluacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Evaluacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Evaluacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/evaluacion/{id}": {
            "get": {
                "tags": [
                    "evaluacion"
                ],
                "description": "get Evaluacion by id",
                "operationId": "EvaluacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Evaluacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "evaluacion"
                ],
                "description": "update the Evaluacion",
                "operationId": "EvaluacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Evaluacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Evaluacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Evaluacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "evaluacion"
                ],
                "description": "delete the Evaluacion",
                "operationId": "EvaluacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fuente_financiacion_rubro_necesidad/": {
            "get": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "get FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "create FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciacionRubroNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciacionRubroNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiacion_rubro_necesidad/{id}": {
            "get": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "get FuenteFinanciacionRubroNecesidad by id",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "update the FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciacionRubroNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "delete the FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/grupo_tipo_contrato/": {
            "get": {
                "tags": [
                    "grupo_tipo_contrato"
                ],
                "description": "get GrupoTipoContrato",
                "operationId": "GrupoTipoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.GrupoTipoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "grupo_tipo_contrato"
                ],
                "description": "create GrupoTipoContrato",
                "operationId": "GrupoTipoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GrupoTipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GrupoTipoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.GrupoTipoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/grupo_tipo_contrato/{id}": {
            "get": {
                "tags": [
                    "grupo_tipo_contrato"
                ],
                "description": "get GrupoTipoContrato by id",
                "operationId": "GrupoTipoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.GrupoTipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "grupo_tipo_contrato"
                ],
                "description": "update the GrupoTipoContrato",
                "operationId": "GrupoTipoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GrupoTipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GrupoTipoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.GrupoTipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "grupo_tipo_contrato"
                ],
                "description": "delete the GrupoTipoContrato",
                "operationId": "GrupoTipoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_interventor/": {
            "get": {
                "tags": [
                    "informacion_interventor"
                ],
                "description": "get InformacionInterventor",
                "operationId": "InformacionInterventorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionInterventor"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_interventor"
                ],
                "description": "create InformacionInterventor",
                "operationId": "InformacionInterventorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionInterventor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionInterventor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionInterventor"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_interventor/{id}": {
            "get": {
                "tags": [
                    "informacion_interventor"
                ],
                "description": "get InformacionInterventor by id",
                "operationId": "InformacionInterventorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionInterventor"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_interventor"
                ],
                "description": "update the InformacionInterventor",
                "operationId": "InformacionInterventorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionInterventor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionInterventor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionInterventor"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_interventor"
                ],
                "description": "delete the InformacionInterventor",
                "operationId": "InformacionInterventorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_persona_juridica/": {
            "get": {
                "tags": [
                    "informacion_persona_juridica"
                ],
                "description": "get InformacionPersonaJuridica",
                "operationId": "InformacionPersonaJuridicaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaJuridica"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_persona_juridica"
                ],
                "description": "create InformacionPersonaJuridica",
                "operationId": "InformacionPersonaJuridicaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionPersonaJuridica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaJuridica"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionPersonaJuridica"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_persona_juridica/{id}": {
            "get": {
                "tags": [
                    "informacion_persona_juridica"
                ],
                "description": "get InformacionPersonaJuridica by id",
                "operationId": "InformacionPersonaJuridicaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaJuridica"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_persona_juridica"
                ],
                "description": "update the InformacionPersonaJuridica",
                "operationId": "InformacionPersonaJuridicaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionPersonaJuridica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaJuridica"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaJuridica"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_persona_juridica"
                ],
                "description": "delete the InformacionPersonaJuridica",
                "operationId": "InformacionPersonaJuridicaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_persona_natural/": {
            "get": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "get InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaNatural"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "create InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionPersonaNatural content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaNatural"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionPersonaNatural"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_persona_natural/{id}": {
            "get": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "get InformacionPersonaNatural by id",
                "operationId": "InformacionPersonaNaturalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaNatural"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "update the InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionPersonaNatural content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaNatural"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionPersonaNatural"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_persona_natural"
                ],
                "description": "delete the InformacionPersonaNatural",
                "operationId": "InformacionPersonaNaturalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_proveedor/": {
            "get": {
                "tags": [
                    "informacion_proveedor"
                ],
                "description": "get InformacionProveedor",
                "operationId": "InformacionProveedorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionProveedor"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_proveedor"
                ],
                "description": "create InformacionProveedor",
                "operationId": "InformacionProveedorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionProveedor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionProveedor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionProveedor"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_proveedor/{id}": {
            "get": {
                "tags": [
                    "informacion_proveedor"
                ],
                "description": "get InformacionProveedor by id",
                "operationId": "InformacionProveedorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionProveedor"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_proveedor"
                ],
                "description": "update the InformacionProveedor",
                "operationId": "InformacionProveedorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionProveedor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionProveedor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionProveedor"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_proveedor"
                ],
                "description": "delete the InformacionProveedor",
                "operationId": "InformacionProveedorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_sociedad_participante/": {
            "get": {
                "tags": [
                    "informacion_sociedad_participante"
                ],
                "description": "get InformacionSociedadParticipante",
                "operationId": "InformacionSociedadParticipanteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadParticipante"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_sociedad_participante"
                ],
                "description": "create InformacionSociedadParticipante",
                "operationId": "InformacionSociedadParticipanteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionSociedadParticipante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadParticipante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionSociedadParticipante"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_sociedad_participante/{id}": {
            "get": {
                "tags": [
                    "informacion_sociedad_participante"
                ],
                "description": "get InformacionSociedadParticipante by id",
                "operationId": "InformacionSociedadParticipanteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadParticipante"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_sociedad_participante"
                ],
                "description": "update the InformacionSociedadParticipante",
                "operationId": "InformacionSociedadParticipanteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionSociedadParticipante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadParticipante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadParticipante"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_sociedad_participante"
                ],
                "description": "delete the InformacionSociedadParticipante",
                "operationId": "InformacionSociedadParticipanteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_sociedad_temporal/": {
            "get": {
                "tags": [
                    "informacion_sociedad_temporal"
                ],
                "description": "get InformacionSociedadTemporal",
                "operationId": "InformacionSociedadTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_sociedad_temporal"
                ],
                "description": "create InformacionSociedadTemporal",
                "operationId": "InformacionSociedadTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionSociedadTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionSociedadTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_sociedad_temporal/{id}": {
            "get": {
                "tags": [
                    "informacion_sociedad_temporal"
                ],
                "description": "get InformacionSociedadTemporal by id",
                "operationId": "InformacionSociedadTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_sociedad_temporal"
                ],
                "description": "update the InformacionSociedadTemporal",
                "operationId": "InformacionSociedadTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionSociedadTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSociedadTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_sociedad_temporal"
                ],
                "description": "delete the InformacionSociedadTemporal",
                "operationId": "InformacionSociedadTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/informacion_supervisor/": {
            "get": {
                "tags": [
                    "informacion_supervisor"
                ],
                "description": "get InformacionSupervisor",
                "operationId": "InformacionSupervisorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSupervisor"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "informacion_supervisor"
                ],
                "description": "create InformacionSupervisor",
                "operationId": "InformacionSupervisorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionSupervisor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSupervisor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.InformacionSupervisor"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/informacion_supervisor/{id}": {
            "get": {
                "tags": [
                    "informacion_supervisor"
                ],
                "description": "get InformacionSupervisor by id",
                "operationId": "InformacionSupervisorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSupervisor"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "informacion_supervisor"
                ],
                "description": "update the InformacionSupervisor",
                "operationId": "InformacionSupervisorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for InformacionSupervisor content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSupervisor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.InformacionSupervisor"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "informacion_supervisor"
                ],
                "description": "delete the InformacionSupervisor",
                "operationId": "InformacionSupervisorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/inhabilidad/": {
            "get": {
                "tags": [
                    "inhabilidad"
                ],
                "description": "get Inhabilidad",
                "operationId": "InhabilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Inhabilidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "inhabilidad"
                ],
                "description": "create Inhabilidad",
                "operationId": "InhabilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Inhabilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inhabilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Inhabilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/inhabilidad/{id}": {
            "get": {
                "tags": [
                    "inhabilidad"
                ],
                "description": "get Inhabilidad by id",
                "operationId": "InhabilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Inhabilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "inhabilidad"
                ],
                "description": "update the Inhabilidad",
                "operationId": "InhabilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Inhabilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inhabilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Inhabilidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "inhabilidad"
                ],
                "description": "delete the Inhabilidad",
                "operationId": "InhabilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/jefe_dependencia_temporal/": {
            "get": {
                "tags": [
                    "jefe_dependencia_temporal"
                ],
                "description": "get JefeDependenciaTemporal",
                "operationId": "JefeDependenciaTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.JefeDependenciaTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "jefe_dependencia_temporal"
                ],
                "description": "create JefeDependenciaTemporal",
                "operationId": "JefeDependenciaTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for JefeDependenciaTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JefeDependenciaTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.JefeDependenciaTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/jefe_dependencia_temporal/{id}": {
            "get": {
                "tags": [
                    "jefe_dependencia_temporal"
                ],
                "description": "get JefeDependenciaTemporal by id",
                "operationId": "JefeDependenciaTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.JefeDependenciaTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "jefe_dependencia_temporal"
                ],
                "description": "update the JefeDependenciaTemporal",
                "operationId": "JefeDependenciaTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for JefeDependenciaTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JefeDependenciaTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.JefeDependenciaTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "jefe_dependencia_temporal"
                ],
                "description": "delete the JefeDependenciaTemporal",
                "operationId": "JefeDependenciaTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/lugar_ejecucion/": {
            "get": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "get LugarEjecucion",
                "operationId": "LugarEjecucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "create LugarEjecucion",
                "operationId": "LugarEjecucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for LugarEjecucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.LugarEjecucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lugar_ejecucion/{id}": {
            "get": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "get LugarEjecucion by id",
                "operationId": "LugarEjecucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "update the LugarEjecucion",
                "operationId": "LugarEjecucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for LugarEjecucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "delete the LugarEjecucion",
                "operationId": "LugarEjecucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/marco_legal/": {
            "get": {
                "tags": [
                    "marco_legal"
                ],
                "description": "get MarcoLegal",
                "operationId": "MarcoLegalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "marco_legal"
                ],
                "description": "create MarcoLegal",
                "operationId": "MarcoLegalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MarcoLegal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/marco_legal/{id}": {
            "get": {
                "tags": [
                    "marco_legal"
                ],
                "description": "get MarcoLegal by id",
                "operationId": "MarcoLegalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "marco_legal"
                ],
                "description": "update the MarcoLegal",
                "operationId": "MarcoLegalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marco_legal"
                ],
                "description": "delete the MarcoLegal",
                "operationId": "MarcoLegalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/marco_legal_necesidad/": {
            "get": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "get MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "create MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegalNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MarcoLegalNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/marco_legal_necesidad/{id}": {
            "get": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "get MarcoLegalNecesidad by id",
                "operationId": "MarcoLegalNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "update the MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegalNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "delete the MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/modalidad_seleccion/": {
            "get": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "get ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "create ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModalidadSeleccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ModalidadSeleccion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/modalidad_seleccion/{id}": {
            "get": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "get ModalidadSeleccion by id",
                "operationId": "ModalidadSeleccionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "update the ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModalidadSeleccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "delete the ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/modificacion_contractual/": {
            "get": {
                "tags": [
                    "modificacion_contractual"
                ],
                "description": "get ModificacionContractual",
                "operationId": "ModificacionContractualController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionContractual"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "modificacion_contractual"
                ],
                "description": "create ModificacionContractual",
                "operationId": "ModificacionContractualController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModificacionContractual content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionContractual"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ModificacionContractual"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/modificacion_contractual/{id}": {
            "get": {
                "tags": [
                    "modificacion_contractual"
                ],
                "description": "get ModificacionContractual by id",
                "operationId": "ModificacionContractualController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionContractual"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "modificacion_contractual"
                ],
                "description": "update the ModificacionContractual",
                "operationId": "ModificacionContractualController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModificacionContractual content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionContractual"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModificacionContractual"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "modificacion_contractual"
                ],
                "description": "delete the ModificacionContractual",
                "operationId": "ModificacionContractualController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/novedad_contractual/": {
            "get": {
                "tags": [
                    "novedad_contractual"
                ],
                "description": "get NovedadContractual",
                "operationId": "NovedadContractualController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NovedadContractual"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "novedad_contractual"
                ],
                "description": "create NovedadContractual",
                "operationId": "NovedadContractualController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NovedadContractual content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NovedadContractual"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NovedadContractual"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/novedad_contractual/{id}": {
            "get": {
                "tags": [
                    "novedad_contractual"
                ],
                "description": "get NovedadContractual by id",
                "operationId": "NovedadContractualController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NovedadContractual"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "novedad_contractual"
                ],
                "description": "update the NovedadContractual",
                "operationId": "NovedadContractualController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NovedadContractual content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NovedadContractual"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NovedadContractual"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "novedad_contractual"
                ],
                "description": "delete the NovedadContractual",
                "operationId": "NovedadContractualController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/objeto_contratar/": {
            "get": {
                "tags": [
                    "objeto_contratar"
                ],
                "description": "get ObjetoContratar",
                "operationId": "ObjetoContratarController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratar"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "objeto_contratar"
                ],
                "description": "create ObjetoContratar",
                "operationId": "ObjetoContratarController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObjetoContratar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ObjetoContratar"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objeto_contratar/{id}": {
            "get": {
                "tags": [
                    "objeto_contratar"
                ],
                "description": "get ObjetoContratar by id",
                "operationId": "ObjetoContratarController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratar"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "objeto_contratar"
                ],
                "description": "update the ObjetoContratar",
                "operationId": "ObjetoContratarController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObjetoContratar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratar"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "objeto_contratar"
                ],
                "description": "delete the ObjetoContratar",
                "operationId": "ObjetoContratarController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/objeto_contratar_actividad_ciiu/": {
            "get": {
                "tags": [
                    "objeto_contratar_actividad_ciiu"
                ],
                "description": "get ObjetoContratarActividadCiiu",
                "operationId": "ObjetoContratarActividadCiiuController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarActividadCiiu"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "objeto_contratar_actividad_ciiu"
                ],
                "description": "create ObjetoContratarActividadCiiu",
                "operationId": "ObjetoContratarActividadCiiuController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObjetoContratarActividadCiiu content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarActividadCiiu"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ObjetoContratarActividadCiiu"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objeto_contratar_actividad_ciiu/{id}": {
            "get": {
                "tags": [
                    "objeto_contratar_actividad_ciiu"
                ],
                "description": "get ObjetoContratarActividadCiiu by id",
                "operationId": "ObjetoContratarActividadCiiuController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarActividadCiiu"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "objeto_contratar_actividad_ciiu"
                ],
                "description": "update the ObjetoContratarActividadCiiu",
                "operationId": "ObjetoContratarActividadCiiuController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObjetoContratarActividadCiiu content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarActividadCiiu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarActividadCiiu"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "objeto_contratar_actividad_ciiu"
                ],
                "description": "delete the ObjetoContratarActividadCiiu",
                "operationId": "ObjetoContratarActividadCiiuController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/objeto_contratar_nucleo_basico/": {
            "get": {
                "tags": [
                    "objeto_contratar_nucleo_basico"
                ],
                "description": "get ObjetoContratarNucleoBasico",
                "operationId": "ObjetoContratarNucleoBasicoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarNucleoBasico"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "objeto_contratar_nucleo_basico"
                ],
                "description": "create ObjetoContratarNucleoBasico",
                "operationId": "ObjetoContratarNucleoBasicoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObjetoContratarNucleoBasico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarNucleoBasico"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ObjetoContratarNucleoBasico"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/objeto_contratar_nucleo_basico/{id}": {
            "get": {
                "tags": [
                    "objeto_contratar_nucleo_basico"
                ],
                "description": "get ObjetoContratarNucleoBasico by id",
                "operationId": "ObjetoContratarNucleoBasicoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarNucleoBasico"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "objeto_contratar_nucleo_basico"
                ],
                "description": "update the ObjetoContratarNucleoBasico",
                "operationId": "ObjetoContratarNucleoBasicoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ObjetoContratarNucleoBasico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarNucleoBasico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ObjetoContratarNucleoBasico"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "objeto_contratar_nucleo_basico"
                ],
                "description": "delete the ObjetoContratarNucleoBasico",
                "operationId": "ObjetoContratarNucleoBasicoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/orden/": {
            "get": {
                "tags": [
                    "orden"
                ],
                "description": "get Orden",
                "operationId": "OrdenController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Orden"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "orden"
                ],
                "description": "create Orden",
                "operationId": "OrdenController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Orden content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Orden"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Orden"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/orden/{id}": {
            "get": {
                "tags": [
                    "orden"
                ],
                "description": "get Orden by id",
                "operationId": "OrdenController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Orden"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "orden"
                ],
                "description": "update the Orden",
                "operationId": "OrdenController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Orden content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Orden"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Orden"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orden"
                ],
                "description": "delete the Orden",
                "operationId": "OrdenController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/ordenador_gasto/": {
            "get": {
                "tags": [
                    "ordenador_gasto"
                ],
                "description": "get OrdenadorGasto",
                "operationId": "OrdenadorGastoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGasto"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "ordenador_gasto"
                ],
                "description": "create OrdenadorGasto",
                "operationId": "OrdenadorGastoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenadorGasto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGasto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenadorGasto"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ordenador_gasto/{id}": {
            "get": {
                "tags": [
                    "ordenador_gasto"
                ],
                "description": "get OrdenadorGasto by id",
                "operationId": "OrdenadorGastoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGasto"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "ordenador_gasto"
                ],
                "description": "update the OrdenadorGasto",
                "operationId": "OrdenadorGastoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenadorGasto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGasto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGasto"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ordenador_gasto"
                ],
                "description": "delete the OrdenadorGasto",
                "operationId": "OrdenadorGastoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/ordenador_gasto_temporal/": {
            "get": {
                "tags": [
                    "ordenador_gasto_temporal"
                ],
                "description": "get OrdenadorGastoTemporal",
                "operationId": "OrdenadorGastoTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "ordenador_gasto_temporal"
                ],
                "description": "create OrdenadorGastoTemporal",
                "operationId": "OrdenadorGastoTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenadorGastoTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.OrdenadorGastoTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ordenador_gasto_temporal/{id}": {
            "get": {
                "tags": [
                    "ordenador_gasto_temporal"
                ],
                "description": "get OrdenadorGastoTemporal by id",
                "operationId": "OrdenadorGastoTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "ordenador_gasto_temporal"
                ],
                "description": "update the OrdenadorGastoTemporal",
                "operationId": "OrdenadorGastoTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for OrdenadorGastoTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ordenador_gasto_temporal"
                ],
                "description": "delete the OrdenadorGastoTemporal",
                "operationId": "OrdenadorGastoTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/ordenadores/": {
            "get": {
                "tags": [
                    "ordenadores"
                ],
                "description": "get Ordenadores",
                "operationId": "OrdenadoresController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Ordenadores"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "ordenadores"
                ],
                "description": "create Ordenadores",
                "operationId": "OrdenadoresController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ordenadores content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ordenadores"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Ordenadores"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/ordenadores/{id}": {
            "get": {
                "tags": [
                    "ordenadores"
                ],
                "description": "get Ordenadores by id",
                "operationId": "OrdenadoresController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Ordenadores"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "ordenadores"
                ],
                "description": "update the Ordenadores",
                "operationId": "OrdenadoresController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Ordenadores content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ordenadores"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Ordenadores"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ordenadores"
                ],
                "description": "delete the Ordenadores",
                "operationId": "OrdenadoresController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_dependencia/": {
            "get": {
                "tags": [
                    "parametro_dependencia"
                ],
                "description": "get ParametroDependencia",
                "operationId": "ParametroDependenciaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroDependencia"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_dependencia"
                ],
                "description": "create ParametroDependencia",
                "operationId": "ParametroDependenciaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroDependencia content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroDependencia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroDependencia"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_dependencia/{id}": {
            "get": {
                "tags": [
                    "parametro_dependencia"
                ],
                "description": "get ParametroDependencia by id",
                "operationId": "ParametroDependenciaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroDependencia"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_dependencia"
                ],
                "description": "update the ParametroDependencia",
                "operationId": "ParametroDependenciaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroDependencia content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroDependencia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroDependencia"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_dependencia"
                ],
                "description": "delete the ParametroDependencia",
                "operationId": "ParametroDependenciaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_estandar/": {
            "get": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "get ParametroEstandar",
                "operationId": "ParametroEstandarController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "create ParametroEstandar",
                "operationId": "ParametroEstandarController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEstandar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroEstandar"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_estandar/{id}": {
            "get": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "get ParametroEstandar by id",
                "operationId": "ParametroEstandarController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "update the ParametroEstandar",
                "operationId": "ParametroEstandarController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEstandar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "delete the ParametroEstandar",
                "operationId": "ParametroEstandarController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_nomenclatura_dian/": {
            "get": {
                "tags": [
                    "parametro_nomenclatura_dian"
                ],
                "description": "get ParametroNomenclaturaDian",
                "operationId": "ParametroNomenclaturaDianController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroNomenclaturaDian"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_nomenclatura_dian"
                ],
                "description": "create ParametroNomenclaturaDian",
                "operationId": "ParametroNomenclaturaDianController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroNomenclaturaDian content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroNomenclaturaDian"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroNomenclaturaDian"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_nomenclatura_dian/{id}": {
            "get": {
                "tags": [
                    "parametro_nomenclatura_dian"
                ],
                "description": "get ParametroNomenclaturaDian by id",
                "operationId": "ParametroNomenclaturaDianController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroNomenclaturaDian"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_nomenclatura_dian"
                ],
                "description": "update the ParametroNomenclaturaDian",
                "operationId": "ParametroNomenclaturaDianController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroNomenclaturaDian content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroNomenclaturaDian"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroNomenclaturaDian"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_nomenclatura_dian"
                ],
                "description": "delete the ParametroNomenclaturaDian",
                "operationId": "ParametroNomenclaturaDianController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_tipo_conformacion/": {
            "get": {
                "tags": [
                    "parametro_tipo_conformacion"
                ],
                "description": "get ParametroTipoConformacion",
                "operationId": "ParametroTipoConformacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroTipoConformacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_tipo_conformacion"
                ],
                "description": "create ParametroTipoConformacion",
                "operationId": "ParametroTipoConformacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroTipoConformacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroTipoConformacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroTipoConformacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_tipo_conformacion/{id}": {
            "get": {
                "tags": [
                    "parametro_tipo_conformacion"
                ],
                "description": "get ParametroTipoConformacion by id",
                "operationId": "ParametroTipoConformacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroTipoConformacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_tipo_conformacion"
                ],
                "description": "update the ParametroTipoConformacion",
                "operationId": "ParametroTipoConformacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroTipoConformacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroTipoConformacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroTipoConformacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_tipo_conformacion"
                ],
                "description": "delete the ParametroTipoConformacion",
                "operationId": "ParametroTipoConformacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_unidad/": {
            "get": {
                "tags": [
                    "parametro_unidad"
                ],
                "description": "get ParametroUnidad",
                "operationId": "ParametroUnidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroUnidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_unidad"
                ],
                "description": "create ParametroUnidad",
                "operationId": "ParametroUnidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroUnidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroUnidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroUnidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_unidad/{id}": {
            "get": {
                "tags": [
                    "parametro_unidad"
                ],
                "description": "get ParametroUnidad by id",
                "operationId": "ParametroUnidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroUnidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_unidad"
                ],
                "description": "update the ParametroUnidad",
                "operationId": "ParametroUnidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroUnidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroUnidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroUnidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_unidad"
                ],
                "description": "delete the ParametroUnidad",
                "operationId": "ParametroUnidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametros/": {
            "get": {
                "tags": [
                    "parametros"
                ],
                "description": "get Parametros",
                "operationId": "ParametrosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametros"
                ],
                "description": "create Parametros",
                "operationId": "ParametrosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametros content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Parametros"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametros/{id}": {
            "get": {
                "tags": [
                    "parametros"
                ],
                "description": "get Parametros by id",
                "operationId": "ParametrosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametros"
                ],
                "description": "update the Parametros",
                "operationId": "ParametrosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametros content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametros"
                ],
                "description": "delete the Parametros",
                "operationId": "ParametrosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/persona_escalafon/": {
            "get": {
                "tags": [
                    "persona_escalafon"
                ],
                "description": "get PersonaEscalafon",
                "operationId": "PersonaEscalafonController.Get All",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PersonaEscalafon"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/persona_escalafonpersona_escalafon_postgrado/": {
            "get": {
                "tags": [
                    "persona_escalafon"
                ],
                "description": "get PersonaEscalafon",
                "operationId": "PersonaEscalafonController.Get All Postgrado",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PersonaEscalafon"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/persona_escalafonpersona_escalafon_pregrado/": {
            "get": {
                "tags": [
                    "persona_escalafon"
                ],
                "description": "get PersonaEscalafon",
                "operationId": "PersonaEscalafonController.Get All Pregrado",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PersonaEscalafon"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/plantilla_minuta/": {
            "get": {
                "tags": [
                    "plantilla_minuta"
                ],
                "description": "get PlantillaMinuta",
                "operationId": "PlantillaMinutaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PlantillaMinuta"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "plantilla_minuta"
                ],
                "description": "create PlantillaMinuta",
                "operationId": "PlantillaMinutaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PlantillaMinuta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PlantillaMinuta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PlantillaMinuta"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/plantilla_minuta/{id}": {
            "get": {
                "tags": [
                    "plantilla_minuta"
                ],
                "description": "get PlantillaMinuta by id",
                "operationId": "PlantillaMinutaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PlantillaMinuta"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "plantilla_minuta"
                ],
                "description": "update the PlantillaMinuta",
                "operationId": "PlantillaMinutaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PlantillaMinuta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PlantillaMinuta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PlantillaMinuta"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "plantilla_minuta"
                ],
                "description": "delete the PlantillaMinuta",
                "operationId": "PlantillaMinutaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/poliza/": {
            "get": {
                "tags": [
                    "poliza"
                ],
                "description": "get Poliza",
                "operationId": "PolizaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "poliza"
                ],
                "description": "create Poliza",
                "operationId": "PolizaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Poliza content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Poliza"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/poliza/{id}": {
            "get": {
                "tags": [
                    "poliza"
                ],
                "description": "get Poliza by id",
                "operationId": "PolizaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "poliza"
                ],
                "description": "update the Poliza",
                "operationId": "PolizaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Poliza content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "poliza"
                ],
                "description": "delete the Poliza",
                "operationId": "PolizaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/precontratado/Contratado/{idResolucion}": {
            "get": {
                "tags": [
                    "precontratado"
                ],
                "description": "get Precontratado",
                "operationId": "PrecontratadoController.Get All",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Precontratado"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/precontratado/{idResolucion}": {
            "get": {
                "tags": [
                    "precontratado"
                ],
                "description": "get Precontratado",
                "operationId": "PrecontratadoController.Get All",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Precontratado"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/precontratado/{idResolucion}/{idPersona}": {
            "get": {
                "tags": [
                    "precontratado"
                ],
                "description": "get Precontratado by id",
                "operationId": "PrecontratadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "idPersona",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Precontratado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/proveedor_actividad_ciiu/": {
            "get": {
                "tags": [
                    "proveedor_actividad_ciiu"
                ],
                "description": "get ProveedorActividadCiiu",
                "operationId": "ProveedorActividadCiiuController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorActividadCiiu"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "proveedor_actividad_ciiu"
                ],
                "description": "create ProveedorActividadCiiu",
                "operationId": "ProveedorActividadCiiuController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorActividadCiiu content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorActividadCiiu"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ProveedorActividadCiiu"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/proveedor_actividad_ciiu/{id}": {
            "get": {
                "tags": [
                    "proveedor_actividad_ciiu"
                ],
                "description": "get ProveedorActividadCiiu by id",
                "operationId": "ProveedorActividadCiiuController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorActividadCiiu"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "proveedor_actividad_ciiu"
                ],
                "description": "update the ProveedorActividadCiiu",
                "operationId": "ProveedorActividadCiiuController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorActividadCiiu content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorActividadCiiu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorActividadCiiu"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "proveedor_actividad_ciiu"
                ],
                "description": "delete the ProveedorActividadCiiu",
                "operationId": "ProveedorActividadCiiuController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/proveedor_contrato_persona/{contrato}/{vigencia}": {
            "get": {
                "tags": [
                    "proveedor_contrato_persona"
                ],
                "description": "create ProveedorContratoPersona",
                "operationId": "ProveedorContratoPersonaController.ProveedorVigenciaContrato",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorContratoPersona content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorContratoPersona"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ProveedorContratoPersona"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/proveedor_contrato_persona/{vigencia}": {
            "get": {
                "tags": [
                    "proveedor_contrato_persona"
                ],
                "description": "create ProveedorContratoPersona",
                "operationId": "ProveedorContratoPersonaController.ProveedorContratoPersona",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorContratoPersona content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorContratoPersona"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ProveedorContratoPersona"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/proveedor_representante_legal/": {
            "get": {
                "tags": [
                    "proveedor_representante_legal"
                ],
                "description": "get ProveedorRepresentanteLegal",
                "operationId": "ProveedorRepresentanteLegalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorRepresentanteLegal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "proveedor_representante_legal"
                ],
                "description": "create ProveedorRepresentanteLegal",
                "operationId": "ProveedorRepresentanteLegalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorRepresentanteLegal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorRepresentanteLegal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ProveedorRepresentanteLegal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/proveedor_representante_legal/{id}": {
            "get": {
                "tags": [
                    "proveedor_representante_legal"
                ],
                "description": "get ProveedorRepresentanteLegal by id",
                "operationId": "ProveedorRepresentanteLegalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorRepresentanteLegal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "proveedor_representante_legal"
                ],
                "description": "update the ProveedorRepresentanteLegal",
                "operationId": "ProveedorRepresentanteLegalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorRepresentanteLegal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorRepresentanteLegal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorRepresentanteLegal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "proveedor_representante_legal"
                ],
                "description": "delete the ProveedorRepresentanteLegal",
                "operationId": "ProveedorRepresentanteLegalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/proveedor_telefono/": {
            "get": {
                "tags": [
                    "proveedor_telefono"
                ],
                "description": "get ProveedorTelefono",
                "operationId": "ProveedorTelefonoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorTelefono"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "proveedor_telefono"
                ],
                "description": "create ProveedorTelefono",
                "operationId": "ProveedorTelefonoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorTelefono content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorTelefono"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ProveedorTelefono"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/proveedor_telefono/{id}": {
            "get": {
                "tags": [
                    "proveedor_telefono"
                ],
                "description": "get ProveedorTelefono by id",
                "operationId": "ProveedorTelefonoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorTelefono"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "proveedor_telefono"
                ],
                "description": "update the ProveedorTelefono",
                "operationId": "ProveedorTelefonoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ProveedorTelefono content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorTelefono"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ProveedorTelefono"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "proveedor_telefono"
                ],
                "description": "delete the ProveedorTelefono",
                "operationId": "ProveedorTelefonoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/puc_temporal/": {
            "get": {
                "tags": [
                    "puc_temporal"
                ],
                "description": "get PucTemporal",
                "operationId": "PucTemporalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PucTemporal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "puc_temporal"
                ],
                "description": "create PucTemporal",
                "operationId": "PucTemporalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PucTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PucTemporal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PucTemporal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/puc_temporal/{id}": {
            "get": {
                "tags": [
                    "puc_temporal"
                ],
                "description": "get PucTemporal by id",
                "operationId": "PucTemporalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PucTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "puc_temporal"
                ],
                "description": "update the PucTemporal",
                "operationId": "PucTemporalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PucTemporal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PucTemporal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PucTemporal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "puc_temporal"
                ],
                "description": "delete the PucTemporal",
                "operationId": "PucTemporalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/reduccion/": {
            "get": {
                "tags": [
                    "reduccion"
                ],
                "description": "get Reduccion",
                "operationId": "ReduccionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Reduccion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "reduccion"
                ],
                "description": "create Reduccion",
                "operationId": "ReduccionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Reduccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reduccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Reduccion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/reduccion/{id}": {
            "get": {
                "tags": [
                    "reduccion"
                ],
                "description": "get Reduccion by id",
                "operationId": "ReduccionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Reduccion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "reduccion"
                ],
                "description": "update the Reduccion",
                "operationId": "ReduccionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Reduccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reduccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Reduccion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "reduccion"
                ],
                "description": "delete the Reduccion",
                "operationId": "ReduccionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/registro_presupuestal_disponibilidad/": {
            "get": {
                "tags": [
                    "registro_presupuestal_disponibilidad"
                ],
                "description": "get RegistroPresupuestalDisponibilidad",
                "operationId": "RegistroPresupuestalDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "registro_presupuestal_disponibilidad"
                ],
                "description": "create RegistroPresupuestalDisponibilidad",
                "operationId": "RegistroPresupuestalDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestalDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RegistroPresupuestalDisponibilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/registro_presupuestal_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "registro_presupuestal_disponibilidad"
                ],
                "description": "get RegistroPresupuestalDisponibilidad by id",
                "operationId": "RegistroPresupuestalDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "registro_presupuestal_disponibilidad"
                ],
                "description": "update the RegistroPresupuestalDisponibilidad",
                "operationId": "RegistroPresupuestalDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RegistroPresupuestalDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPresupuestalDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "registro_presupuestal_disponibilidad"
                ],
                "description": "delete the RegistroPresupuestalDisponibilidad",
                "operationId": "RegistroPresupuestalDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/relacion_parametro/": {
            "get": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "get RelacionParametro",
                "operationId": "RelacionParametroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "create RelacionParametro",
                "operationId": "RelacionParametroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RelacionParametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RelacionParametro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/relacion_parametro/{id}": {
            "get": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "get RelacionParametro by id",
                "operationId": "RelacionParametroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "update the RelacionParametro",
                "operationId": "RelacionParametroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RelacionParametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "delete the RelacionParametro",
                "operationId": "RelacionParametroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/requisito_minimo/": {
            "get": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "get RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "create RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoMinimo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RequisitoMinimo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/requisito_minimo/{id}": {
            "get": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "get RequisitoMinimo by id",
                "operationId": "RequisitoMinimoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "update the RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoMinimo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "delete the RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion/": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "get Resolucion",
                "operationId": "ResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion"
                ],
                "description": "create Resolucion",
                "operationId": "ResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Resolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion/CancelarResolucion/{id}": {
            "put": {
                "tags": [
                    "resolucion"
                ],
                "description": "update the Resolucion",
                "operationId": "ResolucionController.Cancelar",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/resolucion/GenerarResolucion": {
            "post": {
                "tags": [
                    "resolucion"
                ],
                "description": "create Resolucion",
                "operationId": "ResolucionController.Post",
                "responses": {
                    "201": {
                        "description": "{int} models.Resolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion/RestaurarResolucion/{id}": {
            "put": {
                "tags": [
                    "resolucion"
                ],
                "description": "update the Resolucion",
                "operationId": "ResolucionController.Restaurar",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/resolucion/resolucion_por_estado/{vigencia}/{estado}": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "create ResolucionEstado",
                "operationId": "ResolucionController.ResolucionEstado",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion/vigencia_resolucion": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "create VigenciaResolucion",
                "operationId": "ResolucionController.VigenciaResolucion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VigenciaResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/.VigenciaResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion/{id}": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "get Resolucion by id",
                "operationId": "ResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion"
                ],
                "description": "update the Resolucion",
                "operationId": "ResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion"
                ],
                "description": "delete the Resolucion",
                "operationId": "ResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion_estado/": {
            "get": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "get ResolucionEstado",
                "operationId": "ResolucionEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "create ResolucionEstado",
                "operationId": "ResolucionEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ResolucionEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion_estado/{id}": {
            "get": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "get ResolucionEstado by id",
                "operationId": "ResolucionEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "update the ResolucionEstado",
                "operationId": "ResolucionEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "delete the ResolucionEstado",
                "operationId": "ResolucionEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion_vinculacion/": {
            "get": {
                "tags": [
                    "resolucion_vinculacion"
                ],
                "description": "get ResolucionVinculacion",
                "operationId": "ResolucionVinculacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/resolucion_vinculacion_docente/": {
            "get": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "get ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "create ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionVinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ResolucionVinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion_vinculacion_docente/{id}": {
            "get": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "get ResolucionVinculacionDocente by id",
                "operationId": "ResolucionVinculacionDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "update the ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionVinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "delete the ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/rubro_solicitud_necesidad/": {
            "get": {
                "tags": [
                    "rubro_solicitud_necesidad"
                ],
                "description": "get RubroSolicitudNecesidad",
                "operationId": "RubroSolicitudNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "rubro_solicitud_necesidad"
                ],
                "description": "create RubroSolicitudNecesidad",
                "operationId": "RubroSolicitudNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RubroSolicitudNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/rubro_solicitud_necesidad/{id}": {
            "get": {
                "tags": [
                    "rubro_solicitud_necesidad"
                ],
                "description": "get RubroSolicitudNecesidad by id",
                "operationId": "RubroSolicitudNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "rubro_solicitud_necesidad"
                ],
                "description": "update the RubroSolicitudNecesidad",
                "operationId": "RubroSolicitudNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RubroSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rubro_solicitud_necesidad"
                ],
                "description": "delete the RubroSolicitudNecesidad",
                "operationId": "RubroSolicitudNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/sedes_SIC/": {
            "get": {
                "tags": [
                    "sedes_SIC"
                ],
                "description": "get SedesSIC",
                "operationId": "SedesSICController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SedesSIC"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "sedes_SIC"
                ],
                "description": "create SedesSIC",
                "operationId": "SedesSICController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SedesSIC content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SedesSIC"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SedesSIC"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/sedes_SIC/{id}": {
            "get": {
                "tags": [
                    "sedes_SIC"
                ],
                "description": "get SedesSIC by id",
                "operationId": "SedesSICController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SedesSIC"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "sedes_SIC"
                ],
                "description": "update the SedesSIC",
                "operationId": "SedesSICController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SedesSIC content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SedesSIC"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SedesSIC"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "sedes_SIC"
                ],
                "description": "delete the SedesSIC",
                "operationId": "SedesSICController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/servicio/": {
            "get": {
                "tags": [
                    "servicio"
                ],
                "description": "get Servicio",
                "operationId": "ServicioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Servicio"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "servicio"
                ],
                "description": "create Servicio",
                "operationId": "ServicioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Servicio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Servicio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Servicio"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/servicio/{id}": {
            "get": {
                "tags": [
                    "servicio"
                ],
                "description": "get Servicio by id",
                "operationId": "ServicioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Servicio"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "servicio"
                ],
                "description": "update the Servicio",
                "operationId": "ServicioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Servicio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Servicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Servicio"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "servicio"
                ],
                "description": "delete the Servicio",
                "operationId": "ServicioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/servicio_contrato/": {
            "get": {
                "tags": [
                    "servicio_contrato"
                ],
                "description": "get ServicioContrato",
                "operationId": "ServicioContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ServicioContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "servicio_contrato"
                ],
                "description": "create ServicioContrato",
                "operationId": "ServicioContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ServicioContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServicioContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ServicioContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/servicio_contrato/{id}": {
            "get": {
                "tags": [
                    "servicio_contrato"
                ],
                "description": "get ServicioContrato by id",
                "operationId": "ServicioContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ServicioContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "servicio_contrato"
                ],
                "description": "update the ServicioContrato",
                "operationId": "ServicioContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ServicioContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServicioContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ServicioContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "servicio_contrato"
                ],
                "description": "delete the ServicioContrato",
                "operationId": "ServicioContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitud_cotizacion/": {
            "get": {
                "tags": [
                    "solicitud_cotizacion"
                ],
                "description": "get SolicitudCotizacion",
                "operationId": "SolicitudCotizacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCotizacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "solicitud_cotizacion"
                ],
                "description": "create SolicitudCotizacion",
                "operationId": "SolicitudCotizacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudCotizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCotizacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudCotizacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_cotizacion/{id}": {
            "get": {
                "tags": [
                    "solicitud_cotizacion"
                ],
                "description": "get SolicitudCotizacion by id",
                "operationId": "SolicitudCotizacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCotizacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_cotizacion"
                ],
                "description": "update the SolicitudCotizacion",
                "operationId": "SolicitudCotizacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudCotizacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCotizacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCotizacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_cotizacion"
                ],
                "description": "delete the SolicitudCotizacion",
                "operationId": "SolicitudCotizacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitud_disponibilidad/": {
            "get": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "get SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "create SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudDisponibilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "get SolicitudDisponibilidad by id",
                "operationId": "SolicitudDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "update the SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "delete the SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitud_necesidad/": {
            "get": {
                "tags": [
                    "solicitud_necesidad"
                ],
                "description": "get SolicitudNecesidad",
                "operationId": "SolicitudNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "solicitud_necesidad"
                ],
                "description": "create SolicitudNecesidad",
                "operationId": "SolicitudNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_necesidad/{id}": {
            "get": {
                "tags": [
                    "solicitud_necesidad"
                ],
                "description": "get SolicitudNecesidad by id",
                "operationId": "SolicitudNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_necesidad"
                ],
                "description": "update the SolicitudNecesidad",
                "operationId": "SolicitudNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_necesidad"
                ],
                "description": "delete the SolicitudNecesidad",
                "operationId": "SolicitudNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitud_rp/": {
            "get": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "get SolicitudRp",
                "operationId": "SolicitudRpController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "create SolicitudRp",
                "operationId": "SolicitudRpController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudRp"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_rp/{id}": {
            "get": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "get SolicitudRp by id",
                "operationId": "SolicitudRpController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "update the SolicitudRp",
                "operationId": "SolicitudRpController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "delete the SolicitudRp",
                "operationId": "SolicitudRpController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/supervisor_contrato/": {
            "get": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "get SupervisorContrato",
                "operationId": "SupervisorContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "create SupervisorContrato",
                "operationId": "SupervisorContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SupervisorContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/supervisor_contrato/{id}": {
            "get": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "get SupervisorContrato by id",
                "operationId": "SupervisorContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "update the SupervisorContrato",
                "operationId": "SupervisorContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "delete the SupervisorContrato",
                "operationId": "SupervisorContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/supervisor_solicitud_necesidad/": {
            "get": {
                "tags": [
                    "supervisor_solicitud_necesidad"
                ],
                "description": "get SupervisorSolicitudNecesidad",
                "operationId": "SupervisorSolicitudNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorSolicitudNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "supervisor_solicitud_necesidad"
                ],
                "description": "create SupervisorSolicitudNecesidad",
                "operationId": "SupervisorSolicitudNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SupervisorSolicitudNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/supervisor_solicitud_necesidad/{id}": {
            "get": {
                "tags": [
                    "supervisor_solicitud_necesidad"
                ],
                "description": "get SupervisorSolicitudNecesidad by id",
                "operationId": "SupervisorSolicitudNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "supervisor_solicitud_necesidad"
                ],
                "description": "update the SupervisorSolicitudNecesidad",
                "operationId": "SupervisorSolicitudNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorSolicitudNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorSolicitudNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorSolicitudNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "supervisor_solicitud_necesidad"
                ],
                "description": "delete the SupervisorSolicitudNecesidad",
                "operationId": "SupervisorSolicitudNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/suspension/": {
            "get": {
                "tags": [
                    "suspension"
                ],
                "description": "get Suspension",
                "operationId": "SuspensionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Suspension"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "suspension"
                ],
                "description": "create Suspension",
                "operationId": "SuspensionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Suspension content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Suspension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Suspension"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suspension/{id}": {
            "get": {
                "tags": [
                    "suspension"
                ],
                "description": "get Suspension by id",
                "operationId": "SuspensionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Suspension"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "suspension"
                ],
                "description": "update the Suspension",
                "operationId": "SuspensionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Suspension content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Suspension"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Suspension"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "suspension"
                ],
                "description": "delete the Suspension",
                "operationId": "SuspensionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/telefono/": {
            "get": {
                "tags": [
                    "telefono"
                ],
                "description": "get Telefono",
                "operationId": "TelefonoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Telefono"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "telefono"
                ],
                "description": "create Telefono",
                "operationId": "TelefonoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Telefono content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Telefono"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Telefono"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/telefono/{id}": {
            "get": {
                "tags": [
                    "telefono"
                ],
                "description": "get Telefono by id",
                "operationId": "TelefonoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Telefono"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "telefono"
                ],
                "description": "update the Telefono",
                "operationId": "TelefonoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Telefono content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Telefono"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Telefono"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "telefono"
                ],
                "description": "delete the Telefono",
                "operationId": "TelefonoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/terminacion_anticipada/": {
            "get": {
                "tags": [
                    "terminacion_anticipada"
                ],
                "description": "get TerminacionAnticipada",
                "operationId": "TerminacionAnticipadaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TerminacionAnticipada"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "terminacion_anticipada"
                ],
                "description": "create TerminacionAnticipada",
                "operationId": "TerminacionAnticipadaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TerminacionAnticipada content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TerminacionAnticipada"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TerminacionAnticipada"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/terminacion_anticipada/{id}": {
            "get": {
                "tags": [
                    "terminacion_anticipada"
                ],
                "description": "get TerminacionAnticipada by id",
                "operationId": "TerminacionAnticipadaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TerminacionAnticipada"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "terminacion_anticipada"
                ],
                "description": "update the TerminacionAnticipada",
                "operationId": "TerminacionAnticipadaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TerminacionAnticipada content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TerminacionAnticipada"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TerminacionAnticipada"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "terminacion_anticipada"
                ],
                "description": "delete the TerminacionAnticipada",
                "operationId": "TerminacionAnticipadaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_contratacion/": {
            "get": {
                "tags": [
                    "tipo_contratacion"
                ],
                "description": "get TipoContratacion",
                "operationId": "TipoContratacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_contratacion"
                ],
                "description": "create TipoContratacion",
                "operationId": "TipoContratacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContratacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoContratacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_contratacion/{id}": {
            "get": {
                "tags": [
                    "tipo_contratacion"
                ],
                "description": "get TipoContratacion by id",
                "operationId": "TipoContratacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_contratacion"
                ],
                "description": "update the TipoContratacion",
                "operationId": "TipoContratacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContratacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_contratacion"
                ],
                "description": "delete the TipoContratacion",
                "operationId": "TipoContratacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_contrato/": {
            "get": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "get TipoContrato",
                "operationId": "TipoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "create TipoContrato",
                "operationId": "TipoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_contrato/{id}": {
            "get": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "get TipoContrato by id",
                "operationId": "TipoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "update the TipoContrato",
                "operationId": "TipoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "delete the TipoContrato",
                "operationId": "TipoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_resolucion/": {
            "get": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "get TipoResolucion",
                "operationId": "TipoResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "create TipoResolucion",
                "operationId": "TipoResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_resolucion/{id}": {
            "get": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "get TipoResolucion by id",
                "operationId": "TipoResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "update the TipoResolucion",
                "operationId": "TipoResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "delete the TipoResolucion",
                "operationId": "TipoResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/unidad/": {
            "get": {
                "tags": [
                    "unidad"
                ],
                "description": "get Unidad",
                "operationId": "UnidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Unidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "unidad"
                ],
                "description": "create Unidad",
                "operationId": "UnidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Unidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Unidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Unidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/unidad/{id}": {
            "get": {
                "tags": [
                    "unidad"
                ],
                "description": "get Unidad by id",
                "operationId": "UnidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Unidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "unidad"
                ],
                "description": "update the Unidad",
                "operationId": "UnidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Unidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Unidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Unidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "unidad"
                ],
                "description": "delete the Unidad",
                "operationId": "UnidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/unidad_ejecutora/": {
            "get": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "get UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "create UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UnidadEjecutora content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.UnidadEjecutora"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/unidad_ejecutora/{id}": {
            "get": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "get UnidadEjecutora by id",
                "operationId": "UnidadEjecutoraController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "update the UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UnidadEjecutora content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.UnidadEjecutora"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "unidad_ejecutora"
                ],
                "description": "delete the UnidadEjecutora",
                "operationId": "UnidadEjecutoraController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/vigencia_contrato/": {
            "get": {
                "tags": [
                    "vigencia_contrato"
                ],
                "description": "create VigenciaContrato",
                "operationId": "VigenciaContratoController.VigenciaContrato",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VigenciaContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/.VigenciaContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/": {
            "get": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "get VinculacionDocente",
                "operationId": "VinculacionDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "create VinculacionDocente",
                "operationId": "VinculacionDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.VinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/InsertarVinculaciones": {
            "post": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "create VinculacionDocente",
                "operationId": "VinculacionDocenteController.Post",
                "responses": {
                    "201": {
                        "description": "{int} models.VinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/{id}": {
            "get": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "get VinculacionDocente by id",
                "operationId": "VinculacionDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "update the VinculacionDocente",
                "operationId": "VinculacionDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "delete the VinculacionDocente",
                "operationId": "VinculacionDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        ".VigenciaContrato": {
            "type": "object"
        },
        ".VigenciaResolucion": {
            "type": "object"
        },
        "models.ActaInicio": {
            "title": "ActaInicio",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ActividadEconomicaNecesidad": {
            "title": "ActividadEconomicaNecesidad",
            "type": "object",
            "properties": {
                "ActividadEconomica": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudNecesidad": {
                    "$ref": "#/definitions/models.SolicitudNecesidad"
                }
            }
        },
        "models.ActividadSolicitudNecesidad": {
            "title": "ActividadSolicitudNecesidad",
            "type": "object",
            "properties": {
                "Actividad": {
                    "$ref": "#/definitions/models.ActividadesCentroCostos"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MontoParcial": {
                    "type": "number",
                    "format": "double"
                },
                "RubroSolicitudNecesidad": {
                    "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                }
            }
        },
        "models.ActividadesCentroCostos": {
            "title": "ActividadesCentroCostos",
            "type": "object",
            "properties": {
                "CentroCostos": {
                    "$ref": "#/definitions/models.CentroCostos"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Adicion": {
            "title": "Adicion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroSolicitud": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoAdicion": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "UnidadTiempoEjecucion": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "ValorPresupuesto": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorTiempo": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaAdicion": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.AmparoContrato": {
            "title": "AmparoContrato",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Suficiencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoAmparo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "string"
                },
                "VigenciaContrato": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.AmparoPoliza": {
            "title": "AmparoPoliza",
            "type": "object",
            "properties": {
                "Amparo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaFinal": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Poliza": {
                    "$ref": "#/definitions/models.Poliza"
                },
                "TipoValorAmparo": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadAmparo": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Anulacion": {
            "title": "Anulacion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoAnulacion": {
                    "$ref": "#/definitions/models.Parametros"
                }
            }
        },
        "models.Articulo": {
            "title": "Articulo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "Paragrafos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Paragrafo"
                    }
                },
                "Texto": {
                    "type": "string"
                }
            }
        },
        "models.CambioSupervisor": {
            "title": "CambioSupervisor",
            "type": "object",
            "properties": {
                "FechaCambio": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SupervisorAntiguo": {
                    "type": "integer",
                    "format": "int64"
                },
                "SupervisorNuevo": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoCambio": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CargoSupervisorTemporal": {
            "title": "CargoSupervisorTemporal",
            "type": "object",
            "properties": {
                "Cargo": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CatalogoTemporal": {
            "title": "CatalogoTemporal",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "Puc": {
                    "$ref": "#/definitions/models.PucTemporal"
                }
            }
        },
        "models.CentroCostos": {
            "title": "CentroCostos",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Monto": {
                    "type": "number",
                    "format": "double"
                },
                "Nombre": {
                    "type": "string"
                },
                "Rubro": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CentroCostosCentroCostos": {
            "title": "CentroCostosCentroCostos",
            "type": "object",
            "properties": {
                "CentroCostosHijo": {
                    "$ref": "#/definitions/models.CentroCostos"
                },
                "CentroCostosPadre": {
                    "$ref": "#/definitions/models.CentroCostos"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Cesion": {
            "title": "Cesion",
            "type": "object",
            "properties": {
                "AntiguoContratista": {
                    "type": "number",
                    "format": "double"
                },
                "FechaCesion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NuevoContratista": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.CodigoValidacion": {
            "title": "CodigoValidacion",
            "type": "object",
            "properties": {
                "Fecha": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdTabla": {
                    "type": "number",
                    "format": "double"
                },
                "TipoCertificacion": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ComponenteResolucion": {
            "title": "ComponenteResolucion",
            "type": "object",
            "properties": {
                "ComponentePadre": {
                    "$ref": "#/definitions/models.ComponenteResolucion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "ResolucionId": {
                    "$ref": "#/definitions/models.Resolucion"
                },
                "Texto": {
                    "type": "string"
                },
                "TipoComponente": {
                    "type": "string"
                }
            }
        },
        "models.Contrato": {
            "title": "Contrato",
            "type": "object",
            "properties": {
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroConvenio": {
                    "type": "integer",
                    "format": "int64"
                },
                "Perfil": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaConvenio": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoArrendamiento": {
            "title": "ContratoArrendamiento",
            "type": "object",
            "properties": {
                "Destinacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "PlazoAdministracion": {
                    "type": "integer",
                    "format": "int64"
                },
                "PlazoEntrega": {
                    "type": "integer",
                    "format": "int64"
                },
                "PlazoPagoMensual": {
                    "type": "integer",
                    "format": "int64"
                },
                "Reajuste": {
                    "type": "string"
                },
                "ValorAdministracion": {
                    "type": "number",
                    "format": "double"
                },
                "ValorArrendamiento": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoCancelado": {
            "title": "ContratoCancelado",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaCancelacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MotivoCancelacion": {
                    "type": "string"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoCps": {
            "title": "ContratoCps",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Perfil": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoDisponibilidad": {
            "title": "ContratoDisponibilidad",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaCdp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoEstado": {
            "title": "ContratoEstado",
            "type": "object",
            "properties": {
                "Estado": {
                    "$ref": "#/definitions/models.EstadoContrato"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoEvaluacion": {
            "title": "ContratoEvaluacion",
            "type": "object",
            "properties": {
                "DocumentoEvaluador": {
                    "type": "number",
                    "format": "double"
                },
                "Estado": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "number",
                    "format": "double"
                },
                "NumeroNecesidad": {
                    "type": "number",
                    "format": "double"
                },
                "UnidadEjecutora": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ContratoGeneral": {
            "title": "ContratoGeneral",
            "type": "object",
            "properties": {
                "ClaseContratista": {
                    "type": "integer",
                    "format": "int64"
                },
                "ClausulaRegistroPresupuestal": {
                    "type": "boolean"
                },
                "Condiciones": {
                    "type": "string"
                },
                "Contratista": {
                    "type": "integer",
                    "format": "int64"
                },
                "ContratoSuscrito": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContratoSuscrito"
                    }
                },
                "Convenio": {
                    "type": "string"
                },
                "DependenciaSolicitante": {
                    "type": "string"
                },
                "DescripcionFormaPago": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "Id": {
                    "type": "string"
                },
                "Justificacion": {
                    "type": "string"
                },
                "LugarEjecucion": {
                    "$ref": "#/definitions/models.LugarEjecucion"
                },
                "ModalidadSeleccion": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroConstancia": {
                    "type": "integer",
                    "format": "int64"
                },
                "ObjetoContrato": {
                    "type": "string"
                },
                "Observaciones": {
                    "type": "string"
                },
                "OrdenadorGasto": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrigenPresupueso": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrigenRecursos": {
                    "type": "integer",
                    "format": "int64"
                },
                "PlazoEjecucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Procedimiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegimenContratacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "SedeSolicitante": {
                    "type": "string"
                },
                "Supervisor": {
                    "$ref": "#/definitions/models.SupervisorContrato"
                },
                "TemaGastoInversion": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoCompromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContrato": {
                    "$ref": "#/definitions/models.TipoContrato"
                },
                "TipoControl": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoGasto": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoMoneda": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipologiaContrato": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecucion": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorContrato": {
                    "type": "number",
                    "format": "double"
                },
                "ValorContratoMe": {
                    "type": "number",
                    "format": "double"
                },
                "ValorTasaCambio": {
                    "type": "number",
                    "format": "double"
                },
                "VigenciaContrato": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoLiquidado": {
            "title": "ContratoLiquidado",
            "type": "object",
            "properties": {
                "Documento": {
                    "type": "string"
                },
                "FechaLiquidacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroActo": {
                    "type": "string"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Observaciones": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoProveedor": {
            "title": "ContratoProveedor",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdContrato": {
                    "$ref": "#/definitions/models.ContratoEvaluacion"
                },
                "IdProveedor": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ContratoSuscrito": {
            "title": "ContratoSuscrito",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "FechaSuscripcion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "$ref": "#/definitions/models.ContratoGeneral"
                },
                "NumeroContratoSuscrito": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Convenio": {
            "title": "Convenio",
            "type": "object",
            "properties": {
                "ANIOPRO": {
                    "type": "integer",
                    "format": "int64"
                },
                "CLAVE": {
                    "type": "string"
                },
                "CODIGOTESORAL": {
                    "type": "integer",
                    "format": "int64"
                },
                "ENTIDAD": {
                    "type": "string"
                },
                "ESTADO": {
                    "type": "string"
                },
                "FECHAFINAL": {
                    "type": "string",
                    "format": "string"
                },
                "FECHAINICIO": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MODALIDAD": {
                    "type": "string"
                },
                "NOMBRE": {
                    "type": "string"
                },
                "NPE": {
                    "type": "string"
                },
                "OBJETO": {
                    "type": "string"
                },
                "SITUACION": {
                    "type": "string"
                },
                "UNIDAD": {
                    "type": "string"
                }
            }
        },
        "models.Dedicacion": {
            "title": "Dedicacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreDedicacion": {
                    "type": "string"
                }
            }
        },
        "models.DependenciaDependenciaTemporal": {
            "title": "DependenciaDependenciaTemporal",
            "type": "object",
            "properties": {
                "DependenciaHijo": {
                    "$ref": "#/definitions/models.DependenciaTemporal"
                },
                "DependenciaPadre": {
                    "$ref": "#/definitions/models.DependenciaTemporal"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DependenciaSIC": {
            "title": "DependenciaSIC",
            "type": "object",
            "properties": {
                "Barrio": {
                    "type": "string"
                },
                "Ciudad": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                },
                "ESFCODIGODEP": {
                    "type": "string"
                },
                "ESFDEPENCARGADA": {
                    "type": "string"
                },
                "ESFESTADO": {
                    "type": "string"
                },
                "ESFIDESPACIO": {
                    "type": "string"
                },
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Localidad": {
                    "type": "string"
                }
            }
        },
        "models.DependenciaTemporal": {
            "title": "DependenciaTemporal",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "OrdenadorGasto": {
                    "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                }
            }
        },
        "models.DisponibilidadApropiacionSolicitudRp": {
            "title": "DisponibilidadApropiacionSolicitudRp",
            "type": "object",
            "properties": {
                "DisponibilidadApropiacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Monto": {
                    "type": "number",
                    "format": "double"
                },
                "SolicitudRp": {
                    "$ref": "#/definitions/models.SolicitudRp"
                }
            }
        },
        "models.ElementoActaRecibido": {
            "title": "ElementoActaRecibido",
            "type": "object",
            "properties": {
                "Cantidad": {
                    "type": "number",
                    "format": "double"
                },
                "CodigoDependencia": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaFinalPol": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicioPol": {
                    "type": "string",
                    "format": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Funcionario": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdActa": {
                    "type": "integer",
                    "format": "int64"
                },
                "Iva": {
                    "type": "integer",
                    "format": "int64"
                },
                "Marca": {
                    "type": "string"
                },
                "Nivel": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Observacion": {
                    "type": "string"
                },
                "Placa": {
                    "type": "string"
                },
                "Referencia": {
                    "type": "string"
                },
                "Serie": {
                    "type": "string"
                },
                "SubtotalSinIva": {
                    "type": "number",
                    "format": "double"
                },
                "TipoBien": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoPoliza": {
                    "type": "integer",
                    "format": "int64"
                },
                "TotalIva": {
                    "type": "number",
                    "format": "double"
                },
                "TotalIvaCon": {
                    "type": "number",
                    "format": "double"
                },
                "Unidad": {
                    "type": "string"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Escalafon": {
            "title": "Escalafon",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreEscalafon": {
                    "type": "string"
                }
            }
        },
        "models.EscalafonPersona": {
            "title": "EscalafonPersona",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdEscalafon": {
                    "$ref": "#/definitions/models.Escalafon"
                },
                "IdPersonaNatural": {
                    "type": "number",
                    "format": "double"
                },
                "Observacion": {
                    "type": "string"
                }
            }
        },
        "models.EspaciosfisicosSIC": {
            "title": "EspaciosfisicosSIC",
            "type": "object",
            "properties": {
                "ESFCODSEDE": {
                    "$ref": "#/definitions/models.SedesSIC"
                },
                "ESFDIRECCION": {
                    "type": "string"
                },
                "ESFESTADO": {
                    "type": "string"
                },
                "ESFNOMBREESPACIO": {
                    "type": "string"
                },
                "ESFTELEFONO": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EspecificacionTecnica": {
            "title": "EspecificacionTecnica",
            "type": "object",
            "properties": {
                "Cantidad": {
                    "type": "number",
                    "format": "double"
                },
                "Catalogo": {
                    "$ref": "#/definitions/models.CatalogoTemporal"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Iva": {
                    "type": "integer",
                    "format": "int64"
                },
                "Puc": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudNecesidad": {
                    "$ref": "#/definitions/models.SolicitudNecesidad"
                },
                "Unidad": {
                    "type": "string"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoContrato": {
            "title": "EstadoContrato",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreEstado": {
                    "type": "string"
                }
            }
        },
        "models.EstadoResolucion": {
            "title": "EstadoResolucion",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreEstado": {
                    "type": "string"
                }
            }
        },
        "models.EstadoSolicitudNecesidad": {
            "title": "EstadoSolicitudNecesidad",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Evaluacion": {
            "title": "Evaluacion",
            "type": "object",
            "properties": {
                "Cantidades": {
                    "type": "string"
                },
                "Clasificacion": {
                    "type": "string"
                },
                "Conformidad": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "FuncionalidadAdicional": {
                    "type": "string"
                },
                "Garantia": {
                    "type": "string"
                },
                "GarantiaSatisfaccion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdContrato": {
                    "$ref": "#/definitions/models.ContratoEvaluacion"
                },
                "Procedimientos": {
                    "type": "string"
                },
                "PuntajeTotal": {
                    "type": "number",
                    "format": "double"
                },
                "ReclamacionSolucion": {
                    "type": "string"
                },
                "Reclamaciones": {
                    "type": "string"
                },
                "ServicioVenta": {
                    "type": "string"
                },
                "TiemoEntrega": {
                    "type": "string"
                }
            }
        },
        "models.FuenteFinanciacionRubroNecesidad": {
            "title": "FuenteFinanciacionRubroNecesidad",
            "type": "object",
            "properties": {
                "FuenteFinanciacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MontoParcial": {
                    "type": "number",
                    "format": "double"
                },
                "RubroSolicitudNecesidad": {
                    "$ref": "#/definitions/models.RubroSolicitudNecesidad"
                }
            }
        },
        "models.GrupoTipoContrato": {
            "title": "GrupoTipoContrato",
            "type": "object",
            "properties": {
                "CodigoContraloria": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "GrupoContrato": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.InformacionInterventor": {
            "title": "InformacionInterventor",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDependencia": {
                    "$ref": "#/definitions/models.ParametroDependencia"
                },
                "IdProveedor": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                }
            }
        },
        "models.InformacionPersonaJuridica": {
            "title": "InformacionPersonaJuridica",
            "type": "object",
            "properties": {
                "AgenteRetenedor": {
                    "type": "boolean"
                },
                "CodigoPaisDian": {
                    "type": "number",
                    "format": "double"
                },
                "CodigoPostal": {
                    "type": "number",
                    "format": "double"
                },
                "DigitoVerificacion": {
                    "type": "number",
                    "format": "double"
                },
                "ExclusividadProducto": {
                    "type": "boolean"
                },
                "Genero": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "IdCiudadOrigen": {
                    "type": "number",
                    "format": "double"
                },
                "IdTipoConformacion": {
                    "$ref": "#/definitions/models.ParametroTipoConformacion"
                },
                "MontoCapitalAutorizado": {
                    "type": "number",
                    "format": "double"
                },
                "NomProveedor": {
                    "type": "string"
                },
                "NumCedulaExtranjeria": {
                    "type": "number",
                    "format": "double"
                },
                "NumPasaporte": {
                    "type": "number",
                    "format": "double"
                },
                "ProcedenciaEmpresa": {
                    "type": "string"
                },
                "Pyme": {
                    "type": "boolean"
                },
                "RegimenContributivo": {
                    "type": "string"
                },
                "RegistroMercantil": {
                    "type": "boolean"
                },
                "ResponsableICA": {
                    "type": "boolean"
                },
                "ResponsableIVA": {
                    "type": "boolean"
                },
                "SujetoRetencion": {
                    "type": "boolean"
                },
                "TipoIdentificacionExtranjera": {
                    "type": "string"
                }
            }
        },
        "models.InformacionPersonaNatural": {
            "title": "InformacionPersonaNatural",
            "type": "object",
            "properties": {
                "CabezaFamilia": {
                    "type": "boolean"
                },
                "Cargo": {
                    "type": "string"
                },
                "ComunidadLgbt": {
                    "type": "boolean"
                },
                "CuentaAhorroAfc": {
                    "type": "boolean"
                },
                "DeclaranteRenta": {
                    "type": "boolean"
                },
                "DependienteConyuge": {
                    "type": "boolean"
                },
                "DependienteHijoMas23Discapacitado": {
                    "type": "boolean"
                },
                "DependienteHijoMenorEdad": {
                    "type": "boolean"
                },
                "DependienteHijoMenos23Estudiando": {
                    "type": "boolean"
                },
                "DependientePadreOHermano": {
                    "type": "boolean"
                },
                "DigitoVerificacion": {
                    "type": "number",
                    "format": "double"
                },
                "Discapacitado": {
                    "type": "boolean"
                },
                "Especialidad": {
                    "type": "string"
                },
                "EstadoCivil": {
                    "type": "string"
                },
                "FechaExpedicionDocumento": {
                    "type": "string",
                    "format": "string"
                },
                "Genero": {
                    "type": "string"
                },
                "GrupoEtnico": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "IdArl": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdCajaCompensacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdCiudadExpedicionDocumento": {
                    "type": "number",
                    "format": "double"
                },
                "IdEntidadBancariaAfc": {
                    "type": "number",
                    "format": "double"
                },
                "IdEps": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdFondoPension": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdNucleoBasico": {
                    "type": "number",
                    "format": "double"
                },
                "IdPaisNacimiento": {
                    "type": "number",
                    "format": "double"
                },
                "InteresViviendaAfc": {
                    "type": "number",
                    "format": "double"
                },
                "MedicinaPrepagada": {
                    "type": "boolean"
                },
                "MontoCapitalAutorizado": {
                    "type": "number",
                    "format": "double"
                },
                "NumCuentaBancariaAfc": {
                    "type": "string"
                },
                "NumeroPersonasACargo": {
                    "type": "number",
                    "format": "double"
                },
                "Perfil": {
                    "$ref": "#/definitions/models.ParametroEstandar"
                },
                "PersonasACargo": {
                    "type": "boolean"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "Profesion": {
                    "type": "string"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                },
                "TipoDiscapacidad": {
                    "type": "string"
                },
                "TipoDocumento": {
                    "$ref": "#/definitions/models.ParametroEstandar"
                },
                "ValorUvtPrepagada": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.InformacionProveedor": {
            "title": "InformacionProveedor",
            "type": "object",
            "properties": {
                "Anexorup": {
                    "type": "string"
                },
                "Anexorut": {
                    "type": "string"
                },
                "ClasificacionEvaluacion": {
                    "type": "string"
                },
                "Correo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                },
                "Estado": {
                    "$ref": "#/definitions/models.ParametroEstandar"
                },
                "FechaRegistro": {
                    "type": "string"
                },
                "FechaUltimaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdCiudadContacto": {
                    "type": "number",
                    "format": "double"
                },
                "IdEntidadBancaria": {
                    "type": "number",
                    "format": "double"
                },
                "NomAsesor": {
                    "type": "string"
                },
                "NomProveedor": {
                    "type": "string"
                },
                "NumCuentaBancaria": {
                    "type": "string"
                },
                "NumDocumento": {
                    "type": "string"
                },
                "PuntajeEvaluacion": {
                    "type": "number",
                    "format": "double"
                },
                "RegimenContributivo": {
                    "type": "string"
                },
                "TelAsesor": {
                    "type": "string"
                },
                "TipoCuentaBancaria": {
                    "type": "string"
                },
                "Tipopersona": {
                    "type": "string"
                },
                "Web": {
                    "type": "string"
                }
            }
        },
        "models.InformacionSociedadParticipante": {
            "title": "InformacionSociedadParticipante",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdContratista": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                },
                "IdProveedorSociedad": {
                    "$ref": "#/definitions/models.InformacionSociedadTemporal"
                },
                "PorcentajeParticipacion": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.InformacionSociedadTemporal": {
            "title": "InformacionSociedadTemporal",
            "type": "object",
            "properties": {
                "DigitoVerificacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdProveedorSociedad": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                },
                "Representante": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                },
                "RepresentanteSuplente": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                }
            }
        },
        "models.InformacionSupervisor": {
            "title": "InformacionSupervisor",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDependencia": {
                    "$ref": "#/definitions/models.ParametroDependencia"
                },
                "IdProveedor": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                }
            }
        },
        "models.Inhabilidad": {
            "title": "Inhabilidad",
            "type": "object",
            "properties": {
                "AnexoSoporte": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaInhabilidad": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdProveedor": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                },
                "TiempoInhabilidad": {
                    "type": "string"
                },
                "TipoInhabilidad": {
                    "type": "string"
                }
            }
        },
        "models.JefeDependenciaTemporal": {
            "title": "JefeDependenciaTemporal",
            "type": "object",
            "properties": {
                "DependenciaTemporal": {
                    "$ref": "#/definitions/models.DependenciaTemporal"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.LugarEjecucion": {
            "title": "LugarEjecucion",
            "type": "object",
            "properties": {
                "Ciudad": {
                    "type": "number",
                    "format": "double"
                },
                "Dependencia": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Sede": {
                    "type": "string"
                }
            }
        },
        "models.MarcoLegal": {
            "title": "MarcoLegal",
            "type": "object",
            "properties": {
                "Enlace": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreDocumento": {
                    "type": "string"
                }
            }
        },
        "models.MarcoLegalNecesidad": {
            "title": "MarcoLegalNecesidad",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MarcoLegal": {
                    "$ref": "#/definitions/models.MarcoLegal"
                },
                "SolicitudNecesidad": {
                    "$ref": "#/definitions/models.SolicitudNecesidad"
                }
            }
        },
        "models.ModalidadSeleccion": {
            "title": "ModalidadSeleccion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.ModificacionContractual": {
            "title": "ModificacionContractual",
            "type": "object",
            "properties": {
                "DatosAntiguos": {
                    "type": "string"
                },
                "DatosModificados": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Novedad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Razon": {
                    "type": "string"
                },
                "Tipo": {
                    "$ref": "#/definitions/models.Parametros"
                }
            }
        },
        "models.NovedadContractual": {
            "title": "NovedadContractual",
            "type": "object",
            "properties": {
                "ActoAdministrativo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Documento": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "TipoNovedad": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ObjetoContratar": {
            "title": "ObjetoContratar",
            "type": "object",
            "properties": {
                "Cantidad": {
                    "type": "number",
                    "format": "double"
                },
                "Estado": {
                    "type": "string"
                },
                "Fecharegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Fechasolicitudcotizacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdUnidad": {
                    "$ref": "#/definitions/models.ParametroUnidad"
                },
                "NumeroCotizaciones": {
                    "type": "number",
                    "format": "double"
                },
                "NumeroSolicitud": {
                    "type": "number",
                    "format": "double"
                },
                "TipoNecesidad": {
                    "type": "string"
                },
                "UnidadEjecutora": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ObjetoContratarActividadCiiu": {
            "title": "ObjetoContratarActividadCiiu",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdSubclase": {
                    "type": "string"
                }
            }
        },
        "models.ObjetoContratarNucleoBasico": {
            "title": "ObjetoContratarNucleoBasico",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdNucleo": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Orden": {
            "title": "Orden",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Poliza": {
                    "type": "boolean"
                },
                "TipoOrden": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.OrdenadorGasto": {
            "title": "OrdenadorGasto",
            "type": "object",
            "properties": {
                "CorreoOrdenador": {
                    "type": "string"
                },
                "Estado": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreOrdenador": {
                    "type": "string"
                }
            }
        },
        "models.OrdenadorGastoTemporal": {
            "title": "OrdenadorGastoTemporal",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Ordenadores": {
            "title": "Ordenadores",
            "type": "object",
            "properties": {
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdCiudad": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdOrdenador": {
                    "type": "integer",
                    "format": "int64"
                },
                "InfoResolucion": {
                    "type": "string"
                },
                "NombreOrdenador": {
                    "type": "string"
                },
                "RolOrdenador": {
                    "type": "string"
                }
            }
        },
        "models.Paragrafo": {
            "title": "Paragrafo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "Texto": {
                    "type": "string"
                }
            }
        },
        "models.ParametroDependencia": {
            "title": "ParametroDependencia",
            "type": "object",
            "properties": {
                "Correo": {
                    "type": "string"
                },
                "Dependencia": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ParametroEstandar": {
            "title": "ParametroEstandar",
            "type": "object",
            "properties": {
                "Abreviatura": {
                    "type": "string"
                },
                "ClaseParametro": {
                    "type": "string"
                },
                "DescripcionParametro": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorParametro": {
                    "type": "string"
                }
            }
        },
        "models.ParametroNomenclaturaDian": {
            "title": "ParametroNomenclaturaDian",
            "type": "object",
            "properties": {
                "Abreviatura": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nomenclatura": {
                    "type": "string"
                }
            }
        },
        "models.ParametroTipoConformacion": {
            "title": "ParametroTipoConformacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.ParametroUnidad": {
            "title": "ParametroUnidad",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Tipo": {
                    "type": "string"
                },
                "Unidad": {
                    "type": "string"
                }
            }
        },
        "models.Parametros": {
            "title": "Parametros",
            "type": "object",
            "properties": {
                "CodigoContraloria": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.PersonaEscalafon": {
            "title": "PersonaEscalafon",
            "type": "object",
            "properties": {
                "Escalafon": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                }
            }
        },
        "models.PlantillaMinuta": {
            "title": "PlantillaMinuta",
            "type": "object",
            "properties": {
                "Estilo": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Plantilla": {
                    "type": "string"
                },
                "TipoContrato": {
                    "$ref": "#/definitions/models.TipoContrato"
                },
                "TipoPlantilla": {
                    "type": "string"
                }
            }
        },
        "models.Poliza": {
            "title": "Poliza",
            "type": "object",
            "properties": {
                "DescripcionPoliza": {
                    "type": "string"
                },
                "EntidadAseguradora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaAprobacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroPoliza": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Precontratado": {
            "title": "Precontratado",
            "type": "object",
            "properties": {
                "Categoria": {
                    "type": "string"
                },
                "Dedicacion": {
                    "type": "string"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Expedicion": {
                    "type": "string"
                },
                "HorasSemanales": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "ProyectoCurricular": {
                    "type": "integer",
                    "format": "int64"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                },
                "Semanas": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorContrato": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ProveedorActividadCiiu": {
            "title": "ProveedorActividadCiiu",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdSubclase": {
                    "type": "string"
                }
            }
        },
        "models.ProveedorContratoPersona": {
            "title": "ProveedorContratoPersona",
            "type": "object",
            "properties": {
                "Consecutivo_contrato": {
                    "type": "string"
                },
                "Correo": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                },
                "Fecha_registro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id_proveedor": {
                    "type": "string"
                },
                "Justificacion": {
                    "type": "string"
                },
                "Nombre_completo": {
                    "type": "string"
                },
                "Numero_cdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero_contrato": {
                    "type": "string"
                },
                "Numero_solicitud_necesidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero_suscrito": {
                    "type": "string"
                },
                "Objeto_contrato": {
                    "type": "string"
                },
                "Observaciones": {
                    "type": "string"
                },
                "Ordenador_gasto": {
                    "type": "string"
                },
                "Primer_Apellido": {
                    "type": "string"
                },
                "Primer_Nombre": {
                    "type": "string"
                },
                "Segundo_Apellido": {
                    "type": "string"
                },
                "Segundo_Nombre": {
                    "type": "string"
                },
                "Tipo_documento": {
                    "type": "string"
                },
                "Tipo_persona": {
                    "type": "string"
                },
                "Unidad_ejecucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Unidad_ejecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor_contrato": {
                    "type": "string"
                },
                "Vigencia_contrato": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ProveedorRepresentanteLegal": {
            "title": "ProveedorRepresentanteLegal",
            "type": "object",
            "properties": {
                "CorreoRepresentante": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdRepresentante": {
                    "$ref": "#/definitions/models.InformacionPersonaNatural"
                },
                "TelefonoContacto": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.ProveedorTelefono": {
            "title": "ProveedorTelefono",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdTelefono": {
                    "$ref": "#/definitions/models.Telefono"
                }
            }
        },
        "models.PucTemporal": {
            "title": "PucTemporal",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Reduccion": {
            "title": "Reduccion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroRp": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorPresupuesto": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RegistroPresupuestalDisponibilidad": {
            "title": "RegistroPresupuestalDisponibilidad",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDisponibilidadContrato": {
                    "$ref": "#/definitions/models.ContratoDisponibilidad"
                },
                "RegistroPresupuestal": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaRp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RelacionParametro": {
            "title": "RelacionParametro",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RequisitoMinimo": {
            "title": "RequisitoMinimo",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "EspecificacionTecnica": {
                    "$ref": "#/definitions/models.EspecificacionTecnica"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Resolucion": {
            "title": "Resolucion",
            "type": "object",
            "properties": {
                "ConsideracionResolucion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaExpedicion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDependencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdTipoResolucion": {
                    "$ref": "#/definitions/models.TipoResolucion"
                },
                "NumeroResolucion": {
                    "type": "string"
                },
                "NumeroSemanas": {
                    "type": "integer",
                    "format": "int64"
                },
                "Objeto": {
                    "type": "string"
                },
                "Periodo": {
                    "type": "integer",
                    "format": "int64"
                },
                "PreambuloResolucion": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ResolucionCompleta": {
            "title": "ResolucionCompleta",
            "type": "object",
            "properties": {
                "Articulos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Articulo"
                    }
                },
                "Consideracion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "string"
                },
                "Preambulo": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vinculacion": {
                    "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                }
            }
        },
        "models.ResolucionEstado": {
            "title": "ResolucionEstado",
            "type": "object",
            "properties": {
                "Estado": {
                    "$ref": "#/definitions/models.EstadoResolucion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Resolucion": {
                    "$ref": "#/definitions/models.Resolucion"
                },
                "Usuario": {
                    "type": "string"
                }
            }
        },
        "models.ResolucionVinculacionDocente": {
            "title": "ResolucionVinculacionDocente",
            "type": "object",
            "properties": {
                "Dedicacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdFacultad": {
                    "type": "integer",
                    "format": "int64"
                },
                "NivelAcademico": {
                    "type": "string"
                }
            }
        },
        "models.RubroSolicitudNecesidad": {
            "title": "RubroSolicitudNecesidad",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Monto": {
                    "type": "number",
                    "format": "double"
                },
                "Rubro": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudNecesidad": {
                    "$ref": "#/definitions/models.SolicitudNecesidad"
                }
            }
        },
        "models.SedesSIC": {
            "title": "SedesSIC",
            "type": "object",
            "properties": {
                "ESFDIRECCION": {
                    "type": "string"
                },
                "ESFESTADO": {
                    "type": "string"
                },
                "ESFIDSEDE": {
                    "type": "string"
                },
                "ESFSEDE": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Servicio": {
            "title": "Servicio",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.ServicioContrato": {
            "title": "ServicioContrato",
            "type": "object",
            "properties": {
                "CodigoCiiu": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "ValorServicio": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.SolicitudCotizacion": {
            "title": "SolicitudCotizacion",
            "type": "object",
            "properties": {
                "AnexoRespuesta": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdObjeto": {
                    "$ref": "#/definitions/models.ObjetoContratar"
                },
                "IdProveedor": {
                    "$ref": "#/definitions/models.InformacionProveedor"
                }
            }
        },
        "models.SolicitudDisponibilidad": {
            "title": "SolicitudDisponibilidad",
            "type": "object",
            "properties": {
                "FechaSolicitud": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.SolicitudNecesidad"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SolicitudNecesidad": {
            "title": "SolicitudNecesidad",
            "type": "object",
            "properties": {
                "AgotarPresupuesto": {
                    "type": "boolean"
                },
                "AnalisisRiesgo": {
                    "type": "string"
                },
                "CodigoContratoOtroSi": {
                    "type": "integer",
                    "format": "int64"
                },
                "Dependencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "DependenciaDestino": {
                    "$ref": "#/definitions/models.DependenciaTemporal"
                },
                "DiasDuracion": {
                    "type": "number",
                    "format": "double"
                },
                "Entidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "$ref": "#/definitions/models.EstadoSolicitudNecesidad"
                },
                "EstudioMercado": {
                    "type": "string"
                },
                "FechaEvaluacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaSolicitud": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JefeDependencia": {
                    "$ref": "#/definitions/models.JefeDependenciaTemporal"
                },
                "Justificacion": {
                    "type": "string"
                },
                "JustificacionRechazo": {
                    "type": "string"
                },
                "ModalidadSeleccion": {
                    "$ref": "#/definitions/models.ModalidadSeleccion"
                },
                "NovedadOtroSi": {
                    "type": "boolean"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "ObjetoContractual": {
                    "type": "string"
                },
                "OrdenadorGasto": {
                    "$ref": "#/definitions/models.OrdenadorGastoTemporal"
                },
                "PlanAnualAdquisiciones": {
                    "type": "integer",
                    "format": "int64"
                },
                "Servicio": {
                    "$ref": "#/definitions/models.Servicio"
                },
                "TecnicasUniformes": {
                    "type": "boolean"
                },
                "TipoContratacion": {
                    "$ref": "#/definitions/models.TipoContratacion"
                },
                "UnicoPago": {
                    "type": "boolean"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorContratacion": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SolicitudRp": {
            "title": "SolicitudRp",
            "type": "object",
            "properties": {
                "Cdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "Compromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "Expedida": {
                    "type": "boolean"
                },
                "FechaSolicitud": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JustificacionRechazo": {
                    "type": "string"
                },
                "Masivo": {
                    "type": "boolean"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaContrato": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.SupervisorContrato": {
            "title": "SupervisorContrato",
            "type": "object",
            "properties": {
                "Cargo": {
                    "type": "string"
                },
                "CargoId": {
                    "$ref": "#/definitions/models.CargoSupervisorTemporal"
                },
                "DependenciaSupervisor": {
                    "type": "string"
                },
                "DigitoVerificacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "SedeSupervisor": {
                    "type": "string"
                },
                "Tipo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.SupervisorSolicitudNecesidad": {
            "title": "SupervisorSolicitudNecesidad",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "string"
                },
                "FechaAsginacion": {
                    "type": "string",
                    "format": "string"
                },
                "Funcionario": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudNecesidad": {
                    "$ref": "#/definitions/models.SolicitudNecesidad"
                }
            }
        },
        "models.Suspension": {
            "title": "Suspension",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "FechaReanudacion": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdReanudacion": {
                    "$ref": "#/definitions/models.NovedadContractual"
                }
            }
        },
        "models.Telefono": {
            "title": "Telefono",
            "type": "object",
            "properties": {
                "Extension": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroTel": {
                    "type": "number",
                    "format": "double"
                },
                "Tipo": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TerminacionAnticipada": {
            "title": "TerminacionAnticipada",
            "type": "object",
            "properties": {
                "Fecha": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TipoContratacion": {
            "title": "TipoContratacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.TipoContrato": {
            "title": "TipoContrato",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContrato": {
                    "type": "string"
                }
            }
        },
        "models.TipoResolucion": {
            "title": "TipoResolucion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreTipoResolucion": {
                    "type": "string"
                }
            }
        },
        "models.Unidad": {
            "title": "Unidad",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Tipo": {
                    "type": "string"
                },
                "Unidad": {
                    "type": "string"
                }
            }
        },
        "models.UnidadEjecutora": {
            "title": "UnidadEjecutora",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.VinculacionDocente": {
            "title": "VinculacionDocente",
            "type": "object",
            "properties": {
                "Categoria": {
                    "type": "string"
                },
                "Disponibilidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDedicacion": {
                    "$ref": "#/definitions/models.Dedicacion"
                },
                "IdPersona": {
                    "type": "string"
                },
                "IdProyectoCurricular": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdPuntoSalarial": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdResolucion": {
                    "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                },
                "IdSalarioMinimo": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroHorasSemanales": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroSemanas": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorContrato": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    },
    "tags": [
        {
            "name": "dedicacion",
            "description": "DedicacionController operations for Dedicacion\n"
        },
        {
            "name": "resolucion_estado",
            "description": "ResolucionEstadoController operations for ResolucionEstado\n"
        },
        {
            "name": "tipo_resolucion",
            "description": "TipoResolucionController operations for TipoResolucion\n"
        },
        {
            "name": "estado_resolucion",
            "description": "EstadoResolucionController operations for EstadoResolucion\n"
        },
        {
            "name": "escalafon",
            "description": "EscalafonController operations for Escalafon\n"
        },
        {
            "name": "componente_resolucion",
            "description": "ComponenteResolucionController operations for ComponenteResolucion\n"
        },
        {
            "name": "resolucion_vinculacion_docente",
            "description": "ResolucionVinculacionDocenteController operations for ResolucionVinculacionDocente\n"
        },
        {
            "name": "escalafon_persona",
            "description": "EscalafonPersonaController operations for EscalafonPersona\n"
        },
        {
            "name": "resolucion",
            "description": "ResolucionController operations for Resolucion\n"
        },
        {
            "name": "vinculacion_docente",
            "description": "VinculacionDocenteController operations for VinculacionDocente\n"
        },
        {
            "name": "informacion_interventor",
            "description": "InformacionInterventorController operations for InformacionInterventor\n"
        },
        {
            "name": "informacion_persona_natural",
            "description": "InformacionPersonaNaturalController operations for InformacionPersonaNatural\n"
        },
        {
            "name": "inhabilidad",
            "description": "InhabilidadController operations for Inhabilidad\n"
        },
        {
            "name": "parametro_estandar",
            "description": "ParametroEstandarController operations for ParametroEstandar\n"
        },
        {
            "name": "objeto_contratar",
            "description": "ObjetoContratarController operations for ObjetoContratar\n"
        },
        {
            "name": "evaluacion",
            "description": "EvaluacionController operations for Evaluacion\n"
        },
        {
            "name": "parametro_tipo_conformacion",
            "description": "ParametroTipoConformacionController operations for ParametroTipoConformacion\n"
        },
        {
            "name": "contrato_proveedor",
            "description": "ContratoProveedorController operations for ContratoProveedor\n"
        },
        {
            "name": "contrato_evaluacion",
            "description": "ContratoEvaluacionController operations for ContratoEvaluacion\n"
        },
        {
            "name": "parametro_nomenclatura_dian",
            "description": "ParametroNomenclaturaDianController operations for ParametroNomenclaturaDian\n"
        },
        {
            "name": "solicitud_cotizacion",
            "description": "SolicitudCotizacionController operations for SolicitudCotizacion\n"
        },
        {
            "name": "informacion_proveedor",
            "description": "InformacionProveedorController operations for InformacionProveedor\n"
        },
        {
            "name": "informacion_sociedad_temporal",
            "description": "InformacionSociedadTemporalController operations for InformacionSociedadTemporal\n"
        },
        {
            "name": "objeto_contratar_actividad_ciiu",
            "description": "ObjetoContratarActividadCiiuController operations for ObjetoContratarActividadCiiu\n"
        },
        {
            "name": "proveedor_actividad_ciiu",
            "description": "ProveedorActividadCiiuController operations for ProveedorActividadCiiu\n"
        },
        {
            "name": "proveedor_telefono",
            "description": "ProveedorTelefonoController operations for ProveedorTelefono\n"
        },
        {
            "name": "unidad",
            "description": "UnidadController operations for Unidad\n"
        },
        {
            "name": "informacion_persona_juridica",
            "description": "InformacionPersonaJuridicaController operations for InformacionPersonaJuridica\n"
        },
        {
            "name": "codigo_validacion",
            "description": "CodigoValidacionController operations for CodigoValidacion\n"
        },
        {
            "name": "informacion_supervisor",
            "description": "InformacionSupervisorController operations for InformacionSupervisor\n"
        },
        {
            "name": "objeto_contratar_nucleo_basico",
            "description": "ObjetoContratarNucleoBasicoController operations for ObjetoContratarNucleoBasico\n"
        },
        {
            "name": "parametro_dependencia",
            "description": "ParametroDependenciaController operations for ParametroDependencia\n"
        },
        {
            "name": "telefono",
            "description": "TelefonoController operations for Telefono\n"
        },
        {
            "name": "ordenador_gasto",
            "description": "OrdenadorGastoController operations for OrdenadorGasto\n"
        },
        {
            "name": "parametro_unidad",
            "description": "ParametroUnidadController operations for ParametroUnidad\n"
        },
        {
            "name": "proveedor_representante_legal",
            "description": "ProveedorRepresentanteLegalController operations for ProveedorRepresentanteLegal\n"
        },
        {
            "name": "informacion_sociedad_participante",
            "description": "InformacionSociedadParticipanteController operations for InformacionSociedadParticipante\n"
        },
        {
            "name": "estado_solicitud_necesidad",
            "description": "EstadoSolicitudNecesidadController operations for EstadoSolicitudNecesidad\n"
        },
        {
            "name": "ordenador_gasto_temporal",
            "description": "OrdenadorGastoTemporalController operations for OrdenadorGastoTemporal\n"
        },
        {
            "name": "reduccion",
            "description": "ReduccionController operations for Reduccion\n"
        },
        {
            "name": "contrato_cancelado",
            "description": "ContratoCanceladoController operations for ContratoCancelado\n"
        },
        {
            "name": "solicitud_disponibilidad",
            "description": "SolicitudDisponibilidadController operations for SolicitudDisponibilidad\n"
        },
        {
            "name": "rubro_solicitud_necesidad",
            "description": "RubroSolicitudNecesidadController operations for RubroSolicitudNecesidad\n"
        },
        {
            "name": "contrato_cps",
            "description": "ContratoCpsController operations for ContratoCps\n"
        },
        {
            "name": "tipo_contrato",
            "description": "TipoContratoController operations for TipoContrato\n"
        },
        {
            "name": "cesion",
            "description": "CesionController operations for Cesion\n"
        },
        {
            "name": "dependencia_dependencia_temporal",
            "description": "DependenciaDependenciaTemporalController operations for DependenciaDependenciaTemporal\n"
        },
        {
            "name": "fuente_financiacion_rubro_necesidad",
            "description": "FuenteFinanciacionRubroNecesidadController operations for FuenteFinanciacionRubroNecesidad\n"
        },
        {
            "name": "terminacion_anticipada",
            "description": "TerminacionAnticipadaController operations for TerminacionAnticipada\n"
        },
        {
            "name": "plantilla_minuta",
            "description": "PlantillaMinutaController operations for PlantillaMinuta\n"
        },
        {
            "name": "parametros",
            "description": "ParametrosController operations for Parametros\n"
        },
        {
            "name": "adicion",
            "description": "AdicionController operations for Adicion\n"
        },
        {
            "name": "amparo_contrato",
            "description": "AmparoContratoController operations for AmparoContrato\n"
        },
        {
            "name": "jefe_dependencia_temporal",
            "description": "JefeDependenciaTemporalController operations for JefeDependenciaTemporal\n"
        },
        {
            "name": "contrato_estado",
            "description": "ContratoEstadoController operations for ContratoEstado\n"
        },
        {
            "name": "marco_legal_necesidad",
            "description": "MarcoLegalNecesidadController operations for MarcoLegalNecesidad\n"
        },
        {
            "name": "novedad_contractual",
            "description": "NovedadContractualController operations for NovedadContractual\n"
        },
        {
            "name": "tipo_contratacion",
            "description": "TipoContratacionController operations for TipoContratacion\n"
        },
        {
            "name": "dependencia_SIC",
            "description": "DependenciaSICController operations for DependenciaSIC\n"
        },
        {
            "name": "ordenadores",
            "description": "OrdenadoresController operations for Ordenadores\n"
        },
        {
            "name": "convenio",
            "description": "ConvenioController operations for Convenio\n"
        },
        {
            "name": "modalidad_seleccion",
            "description": "ModalidadSeleccionController operations for ModalidadSeleccion\n"
        },
        {
            "name": "contrato_arrendamiento",
            "description": "ContratoArrendamientoController operations for ContratoArrendamiento\n"
        },
        {
            "name": "modificacion_contractual",
            "description": "ModificacionContractualController operations for ModificacionContractual\n"
        },
        {
            "name": "poliza",
            "description": "PolizaController operations for Poliza\n"
        },
        {
            "name": "servicio",
            "description": "ServicioController operations for Servicio\n"
        },
        {
            "name": "supervisor_contrato",
            "description": "SupervisorContratoController operations for SupervisorContrato\n"
        },
        {
            "name": "contrato_disponibilidad",
            "description": "ContratoDisponibilidadController operations for ContratoDisponibilidad\n"
        },
        {
            "name": "suspension",
            "description": "SuspensionController operations for Suspension\n"
        },
        {
            "name": "grupo_tipo_contrato",
            "description": "GrupoTipoContratoController operations for GrupoTipoContrato\n"
        },
        {
            "name": "catalogo_temporal",
            "description": "CatalogoTemporalController operations for CatalogoTemporal\n"
        },
        {
            "name": "cargo_supervisor_temporal",
            "description": "CargoSupervisorTemporalController operations for CargoSupervisorTemporal\n"
        },
        {
            "name": "dependencia_temporal",
            "description": "DependenciaTemporalController operations for DependenciaTemporal\n"
        },
        {
            "name": "marco_legal",
            "description": "MarcoLegalController operations for MarcoLegal\n"
        },
        {
            "name": "centro_costos",
            "description": "CentroCostosController operations for CentroCostos\n"
        },
        {
            "name": "actividad_economica_necesidad",
            "description": "ActividadEconomicaNecesidadController operations for ActividadEconomicaNecesidad\n"
        },
        {
            "name": "contrato_liquidado",
            "description": "ContratoLiquidadoController operations for ContratoLiquidado\n"
        },
        {
            "name": "lugar_ejecucion",
            "description": "LugarEjecucionController operations for LugarEjecucion\n"
        },
        {
            "name": "contrato_suscrito",
            "description": "ContratoSuscritoController operations for ContratoSuscrito\n"
        },
        {
            "name": "solicitud_necesidad",
            "description": "SolicitudNecesidadController operations for SolicitudNecesidad\n"
        },
        {
            "name": "servicio_contrato",
            "description": "ServicioContratoController operations for ServicioContrato\n"
        },
        {
            "name": "relacion_parametro",
            "description": "RelacionParametroController operations for RelacionParametro\n"
        },
        {
            "name": "acta_inicio",
            "description": "ActaInicioController operations for ActaInicio\n"
        },
        {
            "name": "contrato",
            "description": "ContratoController operations for Contrato\n"
        },
        {
            "name": "elemento_acta_recibido",
            "description": "ElementoActaRecibidoController operations for ElementoActaRecibido\n"
        },
        {
            "name": "registro_presupuestal_disponibilidad",
            "description": "RegistroPresupuestalDisponibilidadController operations for RegistroPresupuestalDisponibilidad\n"
        },
        {
            "name": "anulacion",
            "description": "AnulacionController operations for Anulacion\n"
        },
        {
            "name": "especificacion_tecnica",
            "description": "EspecificacionTecnicaController operations for EspecificacionTecnica\n"
        },
        {
            "name": "actividad_solicitud_necesidad",
            "description": "ActividadSolicitudNecesidadController operations for ActividadSolicitudNecesidad\n"
        },
        {
            "name": "supervisor_solicitud_necesidad",
            "description": "SupervisorSolicitudNecesidadController operations for SupervisorSolicitudNecesidad\n"
        },
        {
            "name": "estado_contrato",
            "description": "EstadoContratoController operations for EstadoContrato\n"
        },
        {
            "name": "contrato_general",
            "description": "ContratoGeneralController operations for ContratoGeneral\n"
        },
        {
            "name": "espaciosfisicos_SIC",
            "description": "EspaciosfisicosSICController operations for EspaciosfisicosSIC\n"
        },
        {
            "name": "sedes_SIC",
            "description": "SedesSICController operations for SedesSIC\n"
        },
        {
            "name": "orden",
            "description": "OrdenController operations for Orden\n"
        },
        {
            "name": "requisito_minimo",
            "description": "RequisitoMinimoController operations for RequisitoMinimo\n"
        },
        {
            "name": "amparo_poliza",
            "description": "AmparoPolizaController operations for AmparoPoliza\n"
        },
        {
            "name": "puc_temporal",
            "description": "PucTemporalController operations for PucTemporal\n"
        },
        {
            "name": "unidad_ejecutora",
            "description": "UnidadEjecutoraController operations for UnidadEjecutora\n"
        },
        {
            "name": "centro_costos_centro_costos",
            "description": "CentroCostosCentroCostosController operations for CentroCostosCentroCostos\n"
        },
        {
            "name": "cambio_supervisor",
            "description": "CambioSupervisorController operations for CambioSupervisor\n"
        },
        {
            "name": "actividades_centro_costos",
            "description": "ActividadesCentroCostosController operations for ActividadesCentroCostos\n"
        },
        {
            "name": "proveedor_contrato_persona",
            "description": " ProveedorContratoPersonaController operations for Proveedor_contrato_persona\n"
        },
        {
            "name": "vigencia_contrato",
            "description": " VigenciaContratoController operations for VigenciaContrato\n"
        },
        {
            "name": "solicitud_rp",
            "description": "SolicitudRpController operations for SolicitudRp\n"
        },
        {
            "name": "disponibilidad_apropiacion_solicitud_rp",
            "description": "DisponibilidadApropiacionSolicitudRpController operations for DisponibilidadApropiacionSolicitudRp\n"
        }
    ]
}